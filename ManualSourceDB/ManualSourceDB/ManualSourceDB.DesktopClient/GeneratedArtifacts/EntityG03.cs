

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    public sealed partial class cpn_final : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the cpn_final entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public cpn_final()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public cpn_final(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.cpn_final> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.cpn_final.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void cpn_final_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void cpn_final_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public long id
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.id);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public long idmother
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.idmother);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.idmother, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void idmother_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void idmother_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void idmother_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string nlivro
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.nlivro);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.nlivro, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nlivro_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nlivro_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nlivro_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> cons_more4
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.cons_more4);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.cons_more4, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void cons_more4_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void cons_more4_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void cons_more4_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> partnerpreence
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.partnerpreence);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.partnerpreence, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void partnerpreence_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void partnerpreence_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void partnerpreence_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string weightgainyno
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.weightgainyno);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.weightgainyno, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void weightgainyno_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void weightgainyno_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void weightgainyno_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> dag
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.dag);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.dag, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void dag_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void dag_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void dag_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> dam
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.dam);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.dam, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void dam_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void dam_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void dam_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string supnutr
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.supnutr);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.supnutr, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void supnutr_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void supnutr_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void supnutr_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string resultcured
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.resultcured);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.resultcured, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void resultcured_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void resultcured_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void resultcured_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string resultabandon
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.resultabandon);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.resultabandon, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void resultabandon_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void resultabandon_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void resultabandon_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string receiveddesparasitante
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.receiveddesparasitante);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.receiveddesparasitante, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void receiveddesparasitante_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void receiveddesparasitante_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void receiveddesparasitante_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> salferr_more3
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.salferr_more3);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.salferr_more3, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void salferr_more3_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void salferr_more3_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void salferr_more3_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> its_diag
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.its_diag);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.its_diag, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_diag_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_diag_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_diag_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string its_treatment
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.its_treatment);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.its_treatment, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_treatment_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_treatment_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_treatment_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string its_syphilistesting
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.its_syphilistesting);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.its_syphilistesting, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_syphilistesting_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_syphilistesting_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_syphilistesting_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> its_wsyphilistreat
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.its_wsyphilistreat);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.its_wsyphilistreat, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_wsyphilistreat_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_wsyphilistreat_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_wsyphilistreat_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string its_psyphilistreat
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.its_psyphilistreat);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.its_psyphilistreat, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_psyphilistreat_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_psyphilistreat_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_psyphilistreat_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string womanserostatus
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.womanserostatus);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.womanserostatus, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void womanserostatus_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void womanserostatus_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void womanserostatus_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string partnerserostatus
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.partnerserostatus);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.partnerserostatus, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void partnerserostatus_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void partnerserostatus_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void partnerserostatus_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> ctz_entr
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.ctz_entr);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.ctz_entr, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ctz_entr_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ctz_entr_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ctz_entr_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> ctz_init
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.ctz_init);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.ctz_init, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ctz_init_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ctz_init_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ctz_init_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string finalresult_arv
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.finalresult_arv);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.finalresult_arv, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void finalresult_arv_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void finalresult_arv_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void finalresult_arv_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string tip
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.tip);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.tip, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tip_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tip_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tip_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string bednet
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.bednet);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.bednet, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void bednet_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void bednet_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void bednet_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string mal_diag_lab
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.mal_diag_lab);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.mal_diag_lab, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void mal_diag_lab_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void mal_diag_lab_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void mal_diag_lab_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string mal_treatment
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.mal_treatment);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.mal_treatment, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void mal_treatment_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void mal_treatment_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void mal_treatment_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string mp
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.mp);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.mp, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void mp_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void mp_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void mp_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> vat_1_dose
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.vat_1_dose);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.vat_1_dose, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void vat_1_dose_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void vat_1_dose_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void vat_1_dose_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> vat_2_5_dose
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.vat_2_5_dose);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.vat_2_5_dose, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void vat_2_5_dose_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void vat_2_5_dose_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void vat_2_5_dose_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> tb_isoniazid
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.tb_isoniazid);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.tb_isoniazid, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tb_isoniazid_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tb_isoniazid_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tb_isoniazid_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> tb_treatment
        {
            get
            {
                return global::LightSwitchApplication.cpn_final.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.tb_treatment);
            }
            set
            {
                global::LightSwitchApplication.cpn_final.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.tb_treatment, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tb_treatment_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tb_treatment_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tb_treatment_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.cpn_final,
                global::LightSwitchApplication.cpn_final.DetailsClass,
                global::LightSwitchApplication.cpn_final.DetailsClass.IImplementation,
                global::LightSwitchApplication.cpn_final.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass>.Entry
                __cpn_finalEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass>.Entry(
                    global::LightSwitchApplication.cpn_final.DetailsClass.__cpn_final_CreateNew,
                    global::LightSwitchApplication.cpn_final.DetailsClass.__cpn_final_Created,
                    global::LightSwitchApplication.cpn_final.DetailsClass.__cpn_final_AllowSaveWithErrors);
            private static global::LightSwitchApplication.cpn_final __cpn_final_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.cpn_final> es)
            {
                return new global::LightSwitchApplication.cpn_final(es);
            }
            private static void __cpn_final_Created(global::LightSwitchApplication.cpn_final e)
            {
                e.cpn_final_Created();
            }
            private static bool __cpn_final_AllowSaveWithErrors(global::LightSwitchApplication.cpn_final e)
            {
                bool result = false;
                e.cpn_final_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.cpn_final.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, long> id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, long>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, long> idmother
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.idmother) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, long>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string> nlivro
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.nlivro) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>> cons_more4
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.cons_more4) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>> partnerpreence
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.partnerpreence) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string> weightgainyno
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.weightgainyno) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>> dag
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.dag) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>> dam
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.dam) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string> supnutr
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.supnutr) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string> resultcured
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.resultcured) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string> resultabandon
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.resultabandon) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string> receiveddesparasitante
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.receiveddesparasitante) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>> salferr_more3
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.salferr_more3) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>> its_diag
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.its_diag) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string> its_treatment
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.its_treatment) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string> its_syphilistesting
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.its_syphilistesting) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>> its_wsyphilistreat
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.its_wsyphilistreat) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string> its_psyphilistreat
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.its_psyphilistreat) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string> womanserostatus
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.womanserostatus) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string> partnerserostatus
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.partnerserostatus) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>> ctz_entr
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.ctz_entr) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>> ctz_init
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.ctz_init) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string> finalresult_arv
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.finalresult_arv) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string> tip
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.tip) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string> bednet
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.bednet) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string> mal_diag_lab
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.mal_diag_lab) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string> mal_treatment
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.mal_treatment) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string> mp
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.mp) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>> vat_1_dose
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.vat_1_dose) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>> vat_2_5_dose
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.vat_2_5_dose) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>> tb_isoniazid
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.tb_isoniazid) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>> tb_treatment
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties.tb_treatment) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new long id { get; }
                new long idmother { get; set; }
                new string nlivro { get; set; }
                new global::System.Nullable<bool> cons_more4 { get; set; }
                new global::System.Nullable<bool> partnerpreence { get; set; }
                new string weightgainyno { get; set; }
                new global::System.Nullable<bool> dag { get; set; }
                new global::System.Nullable<bool> dam { get; set; }
                new string supnutr { get; set; }
                new string resultcured { get; set; }
                new string resultabandon { get; set; }
                new string receiveddesparasitante { get; set; }
                new global::System.Nullable<bool> salferr_more3 { get; set; }
                new global::System.Nullable<bool> its_diag { get; set; }
                new string its_treatment { get; set; }
                new string its_syphilistesting { get; set; }
                new global::System.Nullable<bool> its_wsyphilistreat { get; set; }
                new string its_psyphilistreat { get; set; }
                new string womanserostatus { get; set; }
                new string partnerserostatus { get; set; }
                new global::System.Nullable<bool> ctz_entr { get; set; }
                new global::System.Nullable<bool> ctz_init { get; set; }
                new string finalresult_arv { get; set; }
                new string tip { get; set; }
                new string bednet { get; set; }
                new string mal_diag_lab { get; set; }
                new string mal_treatment { get; set; }
                new string mp { get; set; }
                new global::System.Nullable<bool> vat_1_dose { get; set; }
                new global::System.Nullable<bool> vat_2_5_dose { get; set; }
                new global::System.Nullable<bool> tb_isoniazid { get; set; }
                new global::System.Nullable<bool> tb_treatment { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, long>.Entry
                    id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, long>.Entry(
                        "id",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._id_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._id_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._id_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._id_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._id_OnValueChanged);
                private static void _id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, long>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._id, sf);
                }
                private static bool _id_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.id_IsReadOnly(ref result);
                    return result;
                }
                private static void _id_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.id_Validate(r);
                }
                private static long _id_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.id;
                }
                private static void _id_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, long>.Entry
                    idmother = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, long>.Entry(
                        "idmother",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._idmother_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._idmother_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._idmother_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._idmother_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._idmother_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._idmother_OnValueChanged);
                private static void _idmother_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, long>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._idmother, sf);
                }
                private static bool _idmother_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.idmother_IsReadOnly(ref result);
                    return result;
                }
                private static void _idmother_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.idmother_Validate(r);
                }
                private static long _idmother_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.idmother;
                }
                private static void _idmother_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, long v)
                {
                    d.ImplementationEntity.idmother = v;
                }
                private static void _idmother_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.idmother_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry
                    nlivro = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry(
                        "nlivro",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._nlivro_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._nlivro_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._nlivro_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._nlivro_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._nlivro_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._nlivro_OnValueChanged);
                private static void _nlivro_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._nlivro, sf);
                }
                private static bool _nlivro_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.nlivro_IsReadOnly(ref result);
                    return result;
                }
                private static void _nlivro_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.nlivro_Validate(r);
                }
                private static string _nlivro_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.nlivro;
                }
                private static void _nlivro_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, string v)
                {
                    d.ImplementationEntity.nlivro = v;
                }
                private static void _nlivro_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.nlivro_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Entry
                    cons_more4 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "cons_more4",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._cons_more4_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._cons_more4_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._cons_more4_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._cons_more4_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._cons_more4_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._cons_more4_OnValueChanged);
                private static void _cons_more4_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._cons_more4, sf);
                }
                private static bool _cons_more4_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.cons_more4_IsReadOnly(ref result);
                    return result;
                }
                private static void _cons_more4_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.cons_more4_Validate(r);
                }
                private static global::System.Nullable<bool> _cons_more4_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.cons_more4;
                }
                private static void _cons_more4_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.cons_more4 = v;
                }
                private static void _cons_more4_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.cons_more4_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Entry
                    partnerpreence = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "partnerpreence",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._partnerpreence_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._partnerpreence_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._partnerpreence_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._partnerpreence_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._partnerpreence_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._partnerpreence_OnValueChanged);
                private static void _partnerpreence_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._partnerpreence, sf);
                }
                private static bool _partnerpreence_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.partnerpreence_IsReadOnly(ref result);
                    return result;
                }
                private static void _partnerpreence_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.partnerpreence_Validate(r);
                }
                private static global::System.Nullable<bool> _partnerpreence_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.partnerpreence;
                }
                private static void _partnerpreence_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.partnerpreence = v;
                }
                private static void _partnerpreence_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.partnerpreence_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry
                    weightgainyno = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry(
                        "weightgainyno",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._weightgainyno_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._weightgainyno_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._weightgainyno_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._weightgainyno_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._weightgainyno_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._weightgainyno_OnValueChanged);
                private static void _weightgainyno_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._weightgainyno, sf);
                }
                private static bool _weightgainyno_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.weightgainyno_IsReadOnly(ref result);
                    return result;
                }
                private static void _weightgainyno_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.weightgainyno_Validate(r);
                }
                private static string _weightgainyno_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.weightgainyno;
                }
                private static void _weightgainyno_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, string v)
                {
                    d.ImplementationEntity.weightgainyno = v;
                }
                private static void _weightgainyno_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.weightgainyno_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Entry
                    dag = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "dag",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._dag_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._dag_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._dag_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._dag_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._dag_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._dag_OnValueChanged);
                private static void _dag_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._dag, sf);
                }
                private static bool _dag_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.dag_IsReadOnly(ref result);
                    return result;
                }
                private static void _dag_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.dag_Validate(r);
                }
                private static global::System.Nullable<bool> _dag_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.dag;
                }
                private static void _dag_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.dag = v;
                }
                private static void _dag_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.dag_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Entry
                    dam = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "dam",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._dam_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._dam_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._dam_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._dam_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._dam_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._dam_OnValueChanged);
                private static void _dam_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._dam, sf);
                }
                private static bool _dam_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.dam_IsReadOnly(ref result);
                    return result;
                }
                private static void _dam_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.dam_Validate(r);
                }
                private static global::System.Nullable<bool> _dam_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.dam;
                }
                private static void _dam_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.dam = v;
                }
                private static void _dam_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.dam_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry
                    supnutr = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry(
                        "supnutr",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._supnutr_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._supnutr_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._supnutr_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._supnutr_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._supnutr_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._supnutr_OnValueChanged);
                private static void _supnutr_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._supnutr, sf);
                }
                private static bool _supnutr_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.supnutr_IsReadOnly(ref result);
                    return result;
                }
                private static void _supnutr_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.supnutr_Validate(r);
                }
                private static string _supnutr_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.supnutr;
                }
                private static void _supnutr_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, string v)
                {
                    d.ImplementationEntity.supnutr = v;
                }
                private static void _supnutr_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.supnutr_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry
                    resultcured = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry(
                        "resultcured",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._resultcured_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._resultcured_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._resultcured_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._resultcured_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._resultcured_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._resultcured_OnValueChanged);
                private static void _resultcured_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._resultcured, sf);
                }
                private static bool _resultcured_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.resultcured_IsReadOnly(ref result);
                    return result;
                }
                private static void _resultcured_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.resultcured_Validate(r);
                }
                private static string _resultcured_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.resultcured;
                }
                private static void _resultcured_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, string v)
                {
                    d.ImplementationEntity.resultcured = v;
                }
                private static void _resultcured_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.resultcured_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry
                    resultabandon = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry(
                        "resultabandon",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._resultabandon_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._resultabandon_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._resultabandon_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._resultabandon_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._resultabandon_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._resultabandon_OnValueChanged);
                private static void _resultabandon_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._resultabandon, sf);
                }
                private static bool _resultabandon_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.resultabandon_IsReadOnly(ref result);
                    return result;
                }
                private static void _resultabandon_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.resultabandon_Validate(r);
                }
                private static string _resultabandon_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.resultabandon;
                }
                private static void _resultabandon_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, string v)
                {
                    d.ImplementationEntity.resultabandon = v;
                }
                private static void _resultabandon_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.resultabandon_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry
                    receiveddesparasitante = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry(
                        "receiveddesparasitante",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._receiveddesparasitante_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._receiveddesparasitante_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._receiveddesparasitante_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._receiveddesparasitante_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._receiveddesparasitante_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._receiveddesparasitante_OnValueChanged);
                private static void _receiveddesparasitante_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._receiveddesparasitante, sf);
                }
                private static bool _receiveddesparasitante_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.receiveddesparasitante_IsReadOnly(ref result);
                    return result;
                }
                private static void _receiveddesparasitante_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.receiveddesparasitante_Validate(r);
                }
                private static string _receiveddesparasitante_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.receiveddesparasitante;
                }
                private static void _receiveddesparasitante_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, string v)
                {
                    d.ImplementationEntity.receiveddesparasitante = v;
                }
                private static void _receiveddesparasitante_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.receiveddesparasitante_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Entry
                    salferr_more3 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "salferr_more3",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._salferr_more3_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._salferr_more3_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._salferr_more3_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._salferr_more3_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._salferr_more3_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._salferr_more3_OnValueChanged);
                private static void _salferr_more3_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._salferr_more3, sf);
                }
                private static bool _salferr_more3_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.salferr_more3_IsReadOnly(ref result);
                    return result;
                }
                private static void _salferr_more3_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.salferr_more3_Validate(r);
                }
                private static global::System.Nullable<bool> _salferr_more3_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.salferr_more3;
                }
                private static void _salferr_more3_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.salferr_more3 = v;
                }
                private static void _salferr_more3_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.salferr_more3_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Entry
                    its_diag = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "its_diag",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_diag_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_diag_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_diag_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_diag_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_diag_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_diag_OnValueChanged);
                private static void _its_diag_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._its_diag, sf);
                }
                private static bool _its_diag_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.its_diag_IsReadOnly(ref result);
                    return result;
                }
                private static void _its_diag_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.its_diag_Validate(r);
                }
                private static global::System.Nullable<bool> _its_diag_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.its_diag;
                }
                private static void _its_diag_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.its_diag = v;
                }
                private static void _its_diag_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.its_diag_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry
                    its_treatment = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry(
                        "its_treatment",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_treatment_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_treatment_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_treatment_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_treatment_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_treatment_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_treatment_OnValueChanged);
                private static void _its_treatment_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._its_treatment, sf);
                }
                private static bool _its_treatment_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.its_treatment_IsReadOnly(ref result);
                    return result;
                }
                private static void _its_treatment_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.its_treatment_Validate(r);
                }
                private static string _its_treatment_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.its_treatment;
                }
                private static void _its_treatment_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, string v)
                {
                    d.ImplementationEntity.its_treatment = v;
                }
                private static void _its_treatment_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.its_treatment_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry
                    its_syphilistesting = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry(
                        "its_syphilistesting",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_syphilistesting_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_syphilistesting_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_syphilistesting_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_syphilistesting_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_syphilistesting_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_syphilistesting_OnValueChanged);
                private static void _its_syphilistesting_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._its_syphilistesting, sf);
                }
                private static bool _its_syphilistesting_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.its_syphilistesting_IsReadOnly(ref result);
                    return result;
                }
                private static void _its_syphilistesting_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.its_syphilistesting_Validate(r);
                }
                private static string _its_syphilistesting_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.its_syphilistesting;
                }
                private static void _its_syphilistesting_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, string v)
                {
                    d.ImplementationEntity.its_syphilistesting = v;
                }
                private static void _its_syphilistesting_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.its_syphilistesting_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Entry
                    its_wsyphilistreat = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "its_wsyphilistreat",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_wsyphilistreat_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_wsyphilistreat_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_wsyphilistreat_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_wsyphilistreat_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_wsyphilistreat_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_wsyphilistreat_OnValueChanged);
                private static void _its_wsyphilistreat_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._its_wsyphilistreat, sf);
                }
                private static bool _its_wsyphilistreat_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.its_wsyphilistreat_IsReadOnly(ref result);
                    return result;
                }
                private static void _its_wsyphilistreat_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.its_wsyphilistreat_Validate(r);
                }
                private static global::System.Nullable<bool> _its_wsyphilistreat_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.its_wsyphilistreat;
                }
                private static void _its_wsyphilistreat_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.its_wsyphilistreat = v;
                }
                private static void _its_wsyphilistreat_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.its_wsyphilistreat_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry
                    its_psyphilistreat = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry(
                        "its_psyphilistreat",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_psyphilistreat_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_psyphilistreat_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_psyphilistreat_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_psyphilistreat_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_psyphilistreat_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._its_psyphilistreat_OnValueChanged);
                private static void _its_psyphilistreat_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._its_psyphilistreat, sf);
                }
                private static bool _its_psyphilistreat_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.its_psyphilistreat_IsReadOnly(ref result);
                    return result;
                }
                private static void _its_psyphilistreat_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.its_psyphilistreat_Validate(r);
                }
                private static string _its_psyphilistreat_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.its_psyphilistreat;
                }
                private static void _its_psyphilistreat_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, string v)
                {
                    d.ImplementationEntity.its_psyphilistreat = v;
                }
                private static void _its_psyphilistreat_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.its_psyphilistreat_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry
                    womanserostatus = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry(
                        "womanserostatus",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._womanserostatus_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._womanserostatus_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._womanserostatus_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._womanserostatus_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._womanserostatus_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._womanserostatus_OnValueChanged);
                private static void _womanserostatus_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._womanserostatus, sf);
                }
                private static bool _womanserostatus_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.womanserostatus_IsReadOnly(ref result);
                    return result;
                }
                private static void _womanserostatus_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.womanserostatus_Validate(r);
                }
                private static string _womanserostatus_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.womanserostatus;
                }
                private static void _womanserostatus_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, string v)
                {
                    d.ImplementationEntity.womanserostatus = v;
                }
                private static void _womanserostatus_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.womanserostatus_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry
                    partnerserostatus = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry(
                        "partnerserostatus",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._partnerserostatus_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._partnerserostatus_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._partnerserostatus_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._partnerserostatus_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._partnerserostatus_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._partnerserostatus_OnValueChanged);
                private static void _partnerserostatus_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._partnerserostatus, sf);
                }
                private static bool _partnerserostatus_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.partnerserostatus_IsReadOnly(ref result);
                    return result;
                }
                private static void _partnerserostatus_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.partnerserostatus_Validate(r);
                }
                private static string _partnerserostatus_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.partnerserostatus;
                }
                private static void _partnerserostatus_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, string v)
                {
                    d.ImplementationEntity.partnerserostatus = v;
                }
                private static void _partnerserostatus_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.partnerserostatus_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Entry
                    ctz_entr = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "ctz_entr",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._ctz_entr_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._ctz_entr_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._ctz_entr_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._ctz_entr_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._ctz_entr_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._ctz_entr_OnValueChanged);
                private static void _ctz_entr_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._ctz_entr, sf);
                }
                private static bool _ctz_entr_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.ctz_entr_IsReadOnly(ref result);
                    return result;
                }
                private static void _ctz_entr_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ctz_entr_Validate(r);
                }
                private static global::System.Nullable<bool> _ctz_entr_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.ctz_entr;
                }
                private static void _ctz_entr_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.ctz_entr = v;
                }
                private static void _ctz_entr_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.ctz_entr_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Entry
                    ctz_init = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "ctz_init",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._ctz_init_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._ctz_init_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._ctz_init_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._ctz_init_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._ctz_init_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._ctz_init_OnValueChanged);
                private static void _ctz_init_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._ctz_init, sf);
                }
                private static bool _ctz_init_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.ctz_init_IsReadOnly(ref result);
                    return result;
                }
                private static void _ctz_init_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ctz_init_Validate(r);
                }
                private static global::System.Nullable<bool> _ctz_init_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.ctz_init;
                }
                private static void _ctz_init_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.ctz_init = v;
                }
                private static void _ctz_init_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.ctz_init_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry
                    finalresult_arv = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry(
                        "finalresult_arv",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._finalresult_arv_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._finalresult_arv_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._finalresult_arv_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._finalresult_arv_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._finalresult_arv_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._finalresult_arv_OnValueChanged);
                private static void _finalresult_arv_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._finalresult_arv, sf);
                }
                private static bool _finalresult_arv_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.finalresult_arv_IsReadOnly(ref result);
                    return result;
                }
                private static void _finalresult_arv_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.finalresult_arv_Validate(r);
                }
                private static string _finalresult_arv_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.finalresult_arv;
                }
                private static void _finalresult_arv_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, string v)
                {
                    d.ImplementationEntity.finalresult_arv = v;
                }
                private static void _finalresult_arv_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.finalresult_arv_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry
                    tip = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry(
                        "tip",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._tip_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._tip_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._tip_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._tip_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._tip_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._tip_OnValueChanged);
                private static void _tip_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._tip, sf);
                }
                private static bool _tip_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.tip_IsReadOnly(ref result);
                    return result;
                }
                private static void _tip_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.tip_Validate(r);
                }
                private static string _tip_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.tip;
                }
                private static void _tip_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, string v)
                {
                    d.ImplementationEntity.tip = v;
                }
                private static void _tip_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.tip_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry
                    bednet = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry(
                        "bednet",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._bednet_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._bednet_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._bednet_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._bednet_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._bednet_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._bednet_OnValueChanged);
                private static void _bednet_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._bednet, sf);
                }
                private static bool _bednet_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.bednet_IsReadOnly(ref result);
                    return result;
                }
                private static void _bednet_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.bednet_Validate(r);
                }
                private static string _bednet_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.bednet;
                }
                private static void _bednet_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, string v)
                {
                    d.ImplementationEntity.bednet = v;
                }
                private static void _bednet_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.bednet_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry
                    mal_diag_lab = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry(
                        "mal_diag_lab",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._mal_diag_lab_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._mal_diag_lab_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._mal_diag_lab_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._mal_diag_lab_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._mal_diag_lab_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._mal_diag_lab_OnValueChanged);
                private static void _mal_diag_lab_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._mal_diag_lab, sf);
                }
                private static bool _mal_diag_lab_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.mal_diag_lab_IsReadOnly(ref result);
                    return result;
                }
                private static void _mal_diag_lab_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.mal_diag_lab_Validate(r);
                }
                private static string _mal_diag_lab_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.mal_diag_lab;
                }
                private static void _mal_diag_lab_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, string v)
                {
                    d.ImplementationEntity.mal_diag_lab = v;
                }
                private static void _mal_diag_lab_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.mal_diag_lab_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry
                    mal_treatment = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry(
                        "mal_treatment",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._mal_treatment_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._mal_treatment_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._mal_treatment_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._mal_treatment_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._mal_treatment_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._mal_treatment_OnValueChanged);
                private static void _mal_treatment_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._mal_treatment, sf);
                }
                private static bool _mal_treatment_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.mal_treatment_IsReadOnly(ref result);
                    return result;
                }
                private static void _mal_treatment_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.mal_treatment_Validate(r);
                }
                private static string _mal_treatment_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.mal_treatment;
                }
                private static void _mal_treatment_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, string v)
                {
                    d.ImplementationEntity.mal_treatment = v;
                }
                private static void _mal_treatment_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.mal_treatment_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry
                    mp = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Entry(
                        "mp",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._mp_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._mp_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._mp_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._mp_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._mp_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._mp_OnValueChanged);
                private static void _mp_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._mp, sf);
                }
                private static bool _mp_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.mp_IsReadOnly(ref result);
                    return result;
                }
                private static void _mp_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.mp_Validate(r);
                }
                private static string _mp_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.mp;
                }
                private static void _mp_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, string v)
                {
                    d.ImplementationEntity.mp = v;
                }
                private static void _mp_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.mp_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Entry
                    vat_1_dose = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "vat_1_dose",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._vat_1_dose_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._vat_1_dose_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._vat_1_dose_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._vat_1_dose_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._vat_1_dose_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._vat_1_dose_OnValueChanged);
                private static void _vat_1_dose_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._vat_1_dose, sf);
                }
                private static bool _vat_1_dose_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.vat_1_dose_IsReadOnly(ref result);
                    return result;
                }
                private static void _vat_1_dose_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.vat_1_dose_Validate(r);
                }
                private static global::System.Nullable<bool> _vat_1_dose_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.vat_1_dose;
                }
                private static void _vat_1_dose_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.vat_1_dose = v;
                }
                private static void _vat_1_dose_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.vat_1_dose_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Entry
                    vat_2_5_dose = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "vat_2_5_dose",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._vat_2_5_dose_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._vat_2_5_dose_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._vat_2_5_dose_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._vat_2_5_dose_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._vat_2_5_dose_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._vat_2_5_dose_OnValueChanged);
                private static void _vat_2_5_dose_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._vat_2_5_dose, sf);
                }
                private static bool _vat_2_5_dose_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.vat_2_5_dose_IsReadOnly(ref result);
                    return result;
                }
                private static void _vat_2_5_dose_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.vat_2_5_dose_Validate(r);
                }
                private static global::System.Nullable<bool> _vat_2_5_dose_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.vat_2_5_dose;
                }
                private static void _vat_2_5_dose_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.vat_2_5_dose = v;
                }
                private static void _vat_2_5_dose_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.vat_2_5_dose_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Entry
                    tb_isoniazid = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "tb_isoniazid",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._tb_isoniazid_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._tb_isoniazid_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._tb_isoniazid_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._tb_isoniazid_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._tb_isoniazid_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._tb_isoniazid_OnValueChanged);
                private static void _tb_isoniazid_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._tb_isoniazid, sf);
                }
                private static bool _tb_isoniazid_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.tb_isoniazid_IsReadOnly(ref result);
                    return result;
                }
                private static void _tb_isoniazid_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.tb_isoniazid_Validate(r);
                }
                private static global::System.Nullable<bool> _tb_isoniazid_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.tb_isoniazid;
                }
                private static void _tb_isoniazid_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.tb_isoniazid = v;
                }
                private static void _tb_isoniazid_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.tb_isoniazid_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Entry
                    tb_treatment = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "tb_treatment",
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._tb_treatment_Stub,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._tb_treatment_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._tb_treatment_Validate,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._tb_treatment_GetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._tb_treatment_SetImplementationValue,
                        global::LightSwitchApplication.cpn_final.DetailsClass.PropertySetProperties._tb_treatment_OnValueChanged);
                private static void _tb_treatment_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn_final.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.cpn_final.DetailsClass d, object sf)
                {
                    c(d, ref d._tb_treatment, sf);
                }
                private static bool _tb_treatment_ComputeIsReadOnly(global::LightSwitchApplication.cpn_final e)
                {
                    bool result = false;
                    e.tb_treatment_IsReadOnly(ref result);
                    return result;
                }
                private static void _tb_treatment_Validate(global::LightSwitchApplication.cpn_final e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.tb_treatment_Validate(r);
                }
                private static global::System.Nullable<bool> _tb_treatment_GetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d)
                {
                    return d.ImplementationEntity.tb_treatment;
                }
                private static void _tb_treatment_SetImplementationValue(global::LightSwitchApplication.cpn_final.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.tb_treatment = v;
                }
                private static void _tb_treatment_OnValueChanged(global::LightSwitchApplication.cpn_final e)
                {
                    e.tb_treatment_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, long>.Data _id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, long>.Data _idmother;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data _nlivro;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Data _cons_more4;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Data _partnerpreence;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data _weightgainyno;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Data _dag;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Data _dam;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data _supnutr;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data _resultcured;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data _resultabandon;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data _receiveddesparasitante;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Data _salferr_more3;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Data _its_diag;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data _its_treatment;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data _its_syphilistesting;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Data _its_wsyphilistreat;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data _its_psyphilistreat;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data _womanserostatus;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data _partnerserostatus;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Data _ctz_entr;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Data _ctz_init;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data _finalresult_arv;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data _tip;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data _bednet;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data _mal_diag_lab;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data _mal_treatment;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, string>.Data _mp;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Data _vat_1_dose;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Data _vat_2_5_dose;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Data _tb_isoniazid;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn_final, global::LightSwitchApplication.cpn_final.DetailsClass, global::System.Nullable<bool>>.Data _tb_treatment;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    public sealed partial class cpn : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the cpn entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public cpn()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public cpn(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.cpn> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.cpn.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void cpn_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void cpn_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public long id
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.id);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> nr_consulta
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.nr_consulta);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.nr_consulta, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nr_consulta_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nr_consulta_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nr_consulta_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string nlivro
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.nlivro);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.nlivro, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nlivro_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nlivro_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nlivro_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int nyear
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.nyear);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.nyear, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nyear_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nyear_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nyear_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime visdate
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.visdate);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.visdate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void visdate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void visdate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void visdate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string agegroup
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.agegroup);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.agegroup, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void agegroup_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void agegroup_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void agegroup_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> gestationalage
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.gestationalage);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.gestationalage, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void gestationalage_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void gestationalage_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void gestationalage_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> gageless12
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.gageless12);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.gageless12, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void gageless12_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void gageless12_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void gageless12_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> partnerpresence
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.partnerpresence);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.partnerpresence, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void partnerpresence_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void partnerpresence_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void partnerpresence_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> weight
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.weight);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.weight, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void weight_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void weight_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void weight_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string weightgainyno
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.weightgainyno);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.weightgainyno, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void weightgainyno_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void weightgainyno_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void weightgainyno_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> dag
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.dag);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.dag, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void dag_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void dag_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void dag_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> dam
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.dam);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.dam, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void dam_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void dam_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void dam_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> supnutr
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.supnutr);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.supnutr, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void supnutr_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void supnutr_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void supnutr_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string resultcured
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.resultcured);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.resultcured, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void resultcured_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void resultcured_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void resultcured_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string resultabandon
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.resultabandon);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.resultabandon, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void resultabandon_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void resultabandon_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void resultabandon_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string receiveddesparasitante
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.receiveddesparasitante);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.receiveddesparasitante, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void receiveddesparasitante_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void receiveddesparasitante_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void receiveddesparasitante_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string salferr_acfolico
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.salferr_acfolico);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.salferr_acfolico, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void salferr_acfolico_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void salferr_acfolico_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void salferr_acfolico_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ta
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.ta);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.ta, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ta_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ta_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ta_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string hgb
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.hgb);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.hgb, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void hgb_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void hgb_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void hgb_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string proteinuria
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.proteinuria);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.proteinuria, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void proteinuria_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void proteinuria_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void proteinuria_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string glicosuria
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.glicosuria);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.glicosuria, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void glicosuria_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void glicosuria_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void glicosuria_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> its_ulceragenital
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.its_ulceragenital);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.its_ulceragenital, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_ulceragenital_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_ulceragenital_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_ulceragenital_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> its_leucorreia
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.its_leucorreia);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.its_leucorreia, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_leucorreia_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_leucorreia_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_leucorreia_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string its_syndromictreatment
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.its_syndromictreatment);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.its_syndromictreatment, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_syndromictreatment_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_syndromictreatment_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_syndromictreatment_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string its_syphilistesting
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.its_syphilistesting);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.its_syphilistesting, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_syphilistesting_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_syphilistesting_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_syphilistesting_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string its_wsyphilistreat
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.its_wsyphilistreat);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.its_wsyphilistreat, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_wsyphilistreat_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_wsyphilistreat_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_wsyphilistreat_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string its_psyphilistreat
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.its_psyphilistreat);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.its_psyphilistreat, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_psyphilistreat_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_psyphilistreat_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_psyphilistreat_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string its_syphilistratmentmulhr
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.its_syphilistratmentmulhr);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.its_syphilistratmentmulhr, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_syphilistratmentmulhr_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_syphilistratmentmulhr_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_syphilistratmentmulhr_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string its_syphilistratmentparceir
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.its_syphilistratmentparceir);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.its_syphilistratmentparceir, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_syphilistratmentparceir_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_syphilistratmentparceir_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void its_syphilistratmentparceir_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string serostatusentcpn
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.serostatusentcpn);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.serostatusentcpn, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void serostatusentcpn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void serostatusentcpn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void serostatusentcpn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string cpnhivtest
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.cpnhivtest);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.cpnhivtest, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void cpnhivtest_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void cpnhivtest_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void cpnhivtest_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string partnerhivtest
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.partnerhivtest);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.partnerhivtest, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void partnerhivtest_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void partnerhivtest_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void partnerhivtest_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> ctz
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.ctz);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.ctz, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ctz_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ctz_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ctz_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ctz_init_cont
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.ctz_init_cont);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.ctz_init_cont, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ctz_init_cont_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ctz_init_cont_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ctz_init_cont_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> tarv
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.tarv);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.tarv, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tarv_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tarv_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tarv_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> nvp
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.nvp);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.nvp, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nvp_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nvp_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nvp_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> azt_nvp
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.azt_nvp);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.azt_nvp, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void azt_nvp_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void azt_nvp_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void azt_nvp_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> em_tarv_entrada
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.em_tarv_entrada);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.em_tarv_entrada, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void em_tarv_entrada_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void em_tarv_entrada_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void em_tarv_entrada_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> tarv_init_visit
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.tarv_init_visit);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.tarv_init_visit, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tarv_init_visit_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tarv_init_visit_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tarv_init_visit_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> arv_cont
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.arv_cont);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.arv_cont, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void arv_cont_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void arv_cont_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void arv_cont_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string tip
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.tip);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.tip, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tip_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tip_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tip_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string bednet
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.bednet);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.bednet, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void bednet_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void bednet_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void bednet_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string tdr_htz
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.tdr_htz);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.tdr_htz, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tdr_htz_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tdr_htz_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tdr_htz_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string result_tdr_htz
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.result_tdr_htz);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.result_tdr_htz, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void result_tdr_htz_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void result_tdr_htz_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void result_tdr_htz_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string pos_malaria_treated
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.pos_malaria_treated);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.pos_malaria_treated, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void pos_malaria_treated_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void pos_malaria_treated_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void pos_malaria_treated_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string hpp
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.hpp);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.hpp, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void hpp_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void hpp_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void hpp_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> vat_1_dose
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.vat_1_dose);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.vat_1_dose, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void vat_1_dose_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void vat_1_dose_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void vat_1_dose_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> vat_2_5_dose
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.vat_2_5_dose);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.vat_2_5_dose, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void vat_2_5_dose_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void vat_2_5_dose_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void vat_2_5_dose_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string tb_isoniazid
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.tb_isoniazid);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.tb_isoniazid, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tb_isoniazid_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tb_isoniazid_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tb_isoniazid_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string tb_treatment
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.tb_treatment);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.tb_treatment, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tb_treatment_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tb_treatment_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tb_treatment_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string obs
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.obs);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.obs, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void obs_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void obs_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void obs_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string providername
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.providername);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.providername, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void providername_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void providername_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void providername_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.mother mother
        {
            get
            {
                return global::LightSwitchApplication.cpn.DetailsClass.GetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.mother);
            }
            set
            {
                global::LightSwitchApplication.cpn.DetailsClass.SetValue(this, global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.mother, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void mother_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void mother_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void mother_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.cpn,
                global::LightSwitchApplication.cpn.DetailsClass,
                global::LightSwitchApplication.cpn.DetailsClass.IImplementation,
                global::LightSwitchApplication.cpn.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass>.Entry
                __cpnEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass>.Entry(
                    global::LightSwitchApplication.cpn.DetailsClass.__cpn_CreateNew,
                    global::LightSwitchApplication.cpn.DetailsClass.__cpn_Created,
                    global::LightSwitchApplication.cpn.DetailsClass.__cpn_AllowSaveWithErrors);
            private static global::LightSwitchApplication.cpn __cpn_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.cpn> es)
            {
                return new global::LightSwitchApplication.cpn(es);
            }
            private static void __cpn_Created(global::LightSwitchApplication.cpn e)
            {
                e.cpn_Created();
            }
            private static bool __cpn_AllowSaveWithErrors(global::LightSwitchApplication.cpn e)
            {
                bool result = false;
                e.cpn_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.cpn.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, long> id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, long>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<int>> nr_consulta
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.nr_consulta) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> nlivro
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.nlivro) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, int> nyear
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.nyear) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.DateTime> visdate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.visdate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> agegroup
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.agegroup) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<int>> gestationalage
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.gestationalage) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>> gageless12
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.gageless12) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>> partnerpresence
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.partnerpresence) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<int>> weight
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.weight) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> weightgainyno
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.weightgainyno) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>> dag
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.dag) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>> dam
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.dam) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<int>> supnutr
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.supnutr) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> resultcured
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.resultcured) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> resultabandon
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.resultabandon) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> receiveddesparasitante
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.receiveddesparasitante) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> salferr_acfolico
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.salferr_acfolico) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> ta
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.ta) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> hgb
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.hgb) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> proteinuria
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.proteinuria) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> glicosuria
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.glicosuria) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>> its_ulceragenital
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.its_ulceragenital) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>> its_leucorreia
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.its_leucorreia) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> its_syndromictreatment
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.its_syndromictreatment) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> its_syphilistesting
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.its_syphilistesting) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> its_wsyphilistreat
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.its_wsyphilistreat) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> its_psyphilistreat
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.its_psyphilistreat) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> its_syphilistratmentmulhr
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.its_syphilistratmentmulhr) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> its_syphilistratmentparceir
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.its_syphilistratmentparceir) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> serostatusentcpn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.serostatusentcpn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> cpnhivtest
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.cpnhivtest) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> partnerhivtest
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.partnerhivtest) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>> ctz
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.ctz) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> ctz_init_cont
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.ctz_init_cont) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>> tarv
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.tarv) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>> nvp
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.nvp) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>> azt_nvp
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.azt_nvp) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>> em_tarv_entrada
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.em_tarv_entrada) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>> tarv_init_visit
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.tarv_init_visit) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>> arv_cont
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.arv_cont) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> tip
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.tip) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> bednet
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.bednet) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> tdr_htz
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.tdr_htz) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> result_tdr_htz
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.result_tdr_htz) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> pos_malaria_treated
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.pos_malaria_treated) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> hpp
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.hpp) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>> vat_1_dose
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.vat_1_dose) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>> vat_2_5_dose
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.vat_2_5_dose) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> tb_isoniazid
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.tb_isoniazid) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> tb_treatment
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.tb_treatment) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> obs
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.obs) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string> providername
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.providername) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::LightSwitchApplication.mother> mother
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.mother) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::LightSwitchApplication.mother>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new long id { get; }
                new global::System.Nullable<int> nr_consulta { get; set; }
                new string nlivro { get; set; }
                new int nyear { get; set; }
                new global::System.DateTime visdate { get; set; }
                new string agegroup { get; set; }
                new global::System.Nullable<int> gestationalage { get; set; }
                new global::System.Nullable<bool> gageless12 { get; set; }
                new global::System.Nullable<bool> partnerpresence { get; set; }
                new global::System.Nullable<int> weight { get; set; }
                new string weightgainyno { get; set; }
                new global::System.Nullable<bool> dag { get; set; }
                new global::System.Nullable<bool> dam { get; set; }
                new global::System.Nullable<int> supnutr { get; set; }
                new string resultcured { get; set; }
                new string resultabandon { get; set; }
                new string receiveddesparasitante { get; set; }
                new string salferr_acfolico { get; set; }
                new string ta { get; set; }
                new string hgb { get; set; }
                new string proteinuria { get; set; }
                new string glicosuria { get; set; }
                new global::System.Nullable<bool> its_ulceragenital { get; set; }
                new global::System.Nullable<bool> its_leucorreia { get; set; }
                new string its_syndromictreatment { get; set; }
                new string its_syphilistesting { get; set; }
                new string its_wsyphilistreat { get; set; }
                new string its_psyphilistreat { get; set; }
                new string its_syphilistratmentmulhr { get; set; }
                new string its_syphilistratmentparceir { get; set; }
                new string serostatusentcpn { get; set; }
                new string cpnhivtest { get; set; }
                new string partnerhivtest { get; set; }
                new global::System.Nullable<bool> ctz { get; set; }
                new string ctz_init_cont { get; set; }
                new global::System.Nullable<bool> tarv { get; set; }
                new global::System.Nullable<bool> nvp { get; set; }
                new global::System.Nullable<bool> azt_nvp { get; set; }
                new global::System.Nullable<bool> em_tarv_entrada { get; set; }
                new global::System.Nullable<bool> tarv_init_visit { get; set; }
                new global::System.Nullable<bool> arv_cont { get; set; }
                new string tip { get; set; }
                new string bednet { get; set; }
                new string tdr_htz { get; set; }
                new string result_tdr_htz { get; set; }
                new string pos_malaria_treated { get; set; }
                new string hpp { get; set; }
                new global::System.Nullable<bool> vat_1_dose { get; set; }
                new global::System.Nullable<bool> vat_2_5_dose { get; set; }
                new string tb_isoniazid { get; set; }
                new string tb_treatment { get; set; }
                new string obs { get; set; }
                new string providername { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation mother { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, long>.Entry
                    id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, long>.Entry(
                        "id",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._id_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._id_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._id_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._id_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._id_OnValueChanged);
                private static void _id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, long>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._id, sf);
                }
                private static bool _id_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.id_IsReadOnly(ref result);
                    return result;
                }
                private static void _id_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.id_Validate(r);
                }
                private static long _id_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.id;
                }
                private static void _id_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<int>>.Entry
                    nr_consulta = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<int>>.Entry(
                        "nr_consulta",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._nr_consulta_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._nr_consulta_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._nr_consulta_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._nr_consulta_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._nr_consulta_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._nr_consulta_OnValueChanged);
                private static void _nr_consulta_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._nr_consulta, sf);
                }
                private static bool _nr_consulta_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.nr_consulta_IsReadOnly(ref result);
                    return result;
                }
                private static void _nr_consulta_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.nr_consulta_Validate(r);
                }
                private static global::System.Nullable<int> _nr_consulta_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.nr_consulta;
                }
                private static void _nr_consulta_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.nr_consulta = v;
                }
                private static void _nr_consulta_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.nr_consulta_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    nlivro = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "nlivro",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._nlivro_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._nlivro_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._nlivro_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._nlivro_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._nlivro_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._nlivro_OnValueChanged);
                private static void _nlivro_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._nlivro, sf);
                }
                private static bool _nlivro_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.nlivro_IsReadOnly(ref result);
                    return result;
                }
                private static void _nlivro_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.nlivro_Validate(r);
                }
                private static string _nlivro_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.nlivro;
                }
                private static void _nlivro_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.nlivro = v;
                }
                private static void _nlivro_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.nlivro_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, int>.Entry
                    nyear = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, int>.Entry(
                        "nyear",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._nyear_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._nyear_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._nyear_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._nyear_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._nyear_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._nyear_OnValueChanged);
                private static void _nyear_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, int>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._nyear, sf);
                }
                private static bool _nyear_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.nyear_IsReadOnly(ref result);
                    return result;
                }
                private static void _nyear_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.nyear_Validate(r);
                }
                private static int _nyear_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.nyear;
                }
                private static void _nyear_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, int v)
                {
                    d.ImplementationEntity.nyear = v;
                }
                private static void _nyear_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.nyear_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.DateTime>.Entry
                    visdate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.DateTime>.Entry(
                        "visdate",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._visdate_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._visdate_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._visdate_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._visdate_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._visdate_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._visdate_OnValueChanged);
                private static void _visdate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._visdate, sf);
                }
                private static bool _visdate_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.visdate_IsReadOnly(ref result);
                    return result;
                }
                private static void _visdate_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.visdate_Validate(r);
                }
                private static global::System.DateTime _visdate_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.visdate;
                }
                private static void _visdate_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.visdate = global::LightSwitchApplication.cpn.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _visdate_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.visdate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    agegroup = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "agegroup",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._agegroup_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._agegroup_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._agegroup_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._agegroup_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._agegroup_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._agegroup_OnValueChanged);
                private static void _agegroup_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._agegroup, sf);
                }
                private static bool _agegroup_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.agegroup_IsReadOnly(ref result);
                    return result;
                }
                private static void _agegroup_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.agegroup_Validate(r);
                }
                private static string _agegroup_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.agegroup;
                }
                private static void _agegroup_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.agegroup = v;
                }
                private static void _agegroup_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.agegroup_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<int>>.Entry
                    gestationalage = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<int>>.Entry(
                        "gestationalage",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._gestationalage_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._gestationalage_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._gestationalage_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._gestationalage_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._gestationalage_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._gestationalage_OnValueChanged);
                private static void _gestationalage_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._gestationalage, sf);
                }
                private static bool _gestationalage_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.gestationalage_IsReadOnly(ref result);
                    return result;
                }
                private static void _gestationalage_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.gestationalage_Validate(r);
                }
                private static global::System.Nullable<int> _gestationalage_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.gestationalage;
                }
                private static void _gestationalage_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.gestationalage = v;
                }
                private static void _gestationalage_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.gestationalage_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry
                    gageless12 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "gageless12",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._gageless12_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._gageless12_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._gageless12_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._gageless12_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._gageless12_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._gageless12_OnValueChanged);
                private static void _gageless12_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._gageless12, sf);
                }
                private static bool _gageless12_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.gageless12_IsReadOnly(ref result);
                    return result;
                }
                private static void _gageless12_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.gageless12_Validate(r);
                }
                private static global::System.Nullable<bool> _gageless12_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.gageless12;
                }
                private static void _gageless12_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.gageless12 = v;
                }
                private static void _gageless12_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.gageless12_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry
                    partnerpresence = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "partnerpresence",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._partnerpresence_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._partnerpresence_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._partnerpresence_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._partnerpresence_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._partnerpresence_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._partnerpresence_OnValueChanged);
                private static void _partnerpresence_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._partnerpresence, sf);
                }
                private static bool _partnerpresence_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.partnerpresence_IsReadOnly(ref result);
                    return result;
                }
                private static void _partnerpresence_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.partnerpresence_Validate(r);
                }
                private static global::System.Nullable<bool> _partnerpresence_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.partnerpresence;
                }
                private static void _partnerpresence_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.partnerpresence = v;
                }
                private static void _partnerpresence_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.partnerpresence_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<int>>.Entry
                    weight = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<int>>.Entry(
                        "weight",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._weight_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._weight_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._weight_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._weight_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._weight_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._weight_OnValueChanged);
                private static void _weight_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._weight, sf);
                }
                private static bool _weight_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.weight_IsReadOnly(ref result);
                    return result;
                }
                private static void _weight_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.weight_Validate(r);
                }
                private static global::System.Nullable<int> _weight_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.weight;
                }
                private static void _weight_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.weight = v;
                }
                private static void _weight_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.weight_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    weightgainyno = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "weightgainyno",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._weightgainyno_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._weightgainyno_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._weightgainyno_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._weightgainyno_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._weightgainyno_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._weightgainyno_OnValueChanged);
                private static void _weightgainyno_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._weightgainyno, sf);
                }
                private static bool _weightgainyno_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.weightgainyno_IsReadOnly(ref result);
                    return result;
                }
                private static void _weightgainyno_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.weightgainyno_Validate(r);
                }
                private static string _weightgainyno_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.weightgainyno;
                }
                private static void _weightgainyno_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.weightgainyno = v;
                }
                private static void _weightgainyno_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.weightgainyno_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry
                    dag = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "dag",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._dag_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._dag_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._dag_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._dag_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._dag_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._dag_OnValueChanged);
                private static void _dag_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._dag, sf);
                }
                private static bool _dag_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.dag_IsReadOnly(ref result);
                    return result;
                }
                private static void _dag_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.dag_Validate(r);
                }
                private static global::System.Nullable<bool> _dag_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.dag;
                }
                private static void _dag_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.dag = v;
                }
                private static void _dag_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.dag_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry
                    dam = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "dam",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._dam_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._dam_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._dam_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._dam_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._dam_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._dam_OnValueChanged);
                private static void _dam_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._dam, sf);
                }
                private static bool _dam_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.dam_IsReadOnly(ref result);
                    return result;
                }
                private static void _dam_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.dam_Validate(r);
                }
                private static global::System.Nullable<bool> _dam_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.dam;
                }
                private static void _dam_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.dam = v;
                }
                private static void _dam_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.dam_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<int>>.Entry
                    supnutr = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<int>>.Entry(
                        "supnutr",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._supnutr_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._supnutr_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._supnutr_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._supnutr_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._supnutr_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._supnutr_OnValueChanged);
                private static void _supnutr_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._supnutr, sf);
                }
                private static bool _supnutr_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.supnutr_IsReadOnly(ref result);
                    return result;
                }
                private static void _supnutr_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.supnutr_Validate(r);
                }
                private static global::System.Nullable<int> _supnutr_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.supnutr;
                }
                private static void _supnutr_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.supnutr = v;
                }
                private static void _supnutr_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.supnutr_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    resultcured = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "resultcured",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._resultcured_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._resultcured_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._resultcured_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._resultcured_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._resultcured_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._resultcured_OnValueChanged);
                private static void _resultcured_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._resultcured, sf);
                }
                private static bool _resultcured_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.resultcured_IsReadOnly(ref result);
                    return result;
                }
                private static void _resultcured_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.resultcured_Validate(r);
                }
                private static string _resultcured_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.resultcured;
                }
                private static void _resultcured_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.resultcured = v;
                }
                private static void _resultcured_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.resultcured_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    resultabandon = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "resultabandon",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._resultabandon_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._resultabandon_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._resultabandon_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._resultabandon_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._resultabandon_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._resultabandon_OnValueChanged);
                private static void _resultabandon_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._resultabandon, sf);
                }
                private static bool _resultabandon_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.resultabandon_IsReadOnly(ref result);
                    return result;
                }
                private static void _resultabandon_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.resultabandon_Validate(r);
                }
                private static string _resultabandon_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.resultabandon;
                }
                private static void _resultabandon_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.resultabandon = v;
                }
                private static void _resultabandon_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.resultabandon_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    receiveddesparasitante = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "receiveddesparasitante",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._receiveddesparasitante_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._receiveddesparasitante_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._receiveddesparasitante_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._receiveddesparasitante_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._receiveddesparasitante_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._receiveddesparasitante_OnValueChanged);
                private static void _receiveddesparasitante_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._receiveddesparasitante, sf);
                }
                private static bool _receiveddesparasitante_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.receiveddesparasitante_IsReadOnly(ref result);
                    return result;
                }
                private static void _receiveddesparasitante_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.receiveddesparasitante_Validate(r);
                }
                private static string _receiveddesparasitante_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.receiveddesparasitante;
                }
                private static void _receiveddesparasitante_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.receiveddesparasitante = v;
                }
                private static void _receiveddesparasitante_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.receiveddesparasitante_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    salferr_acfolico = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "salferr_acfolico",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._salferr_acfolico_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._salferr_acfolico_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._salferr_acfolico_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._salferr_acfolico_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._salferr_acfolico_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._salferr_acfolico_OnValueChanged);
                private static void _salferr_acfolico_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._salferr_acfolico, sf);
                }
                private static bool _salferr_acfolico_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.salferr_acfolico_IsReadOnly(ref result);
                    return result;
                }
                private static void _salferr_acfolico_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.salferr_acfolico_Validate(r);
                }
                private static string _salferr_acfolico_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.salferr_acfolico;
                }
                private static void _salferr_acfolico_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.salferr_acfolico = v;
                }
                private static void _salferr_acfolico_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.salferr_acfolico_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    ta = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "ta",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._ta_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._ta_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._ta_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._ta_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._ta_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._ta_OnValueChanged);
                private static void _ta_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._ta, sf);
                }
                private static bool _ta_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.ta_IsReadOnly(ref result);
                    return result;
                }
                private static void _ta_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ta_Validate(r);
                }
                private static string _ta_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.ta;
                }
                private static void _ta_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ta = v;
                }
                private static void _ta_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.ta_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    hgb = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "hgb",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._hgb_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._hgb_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._hgb_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._hgb_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._hgb_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._hgb_OnValueChanged);
                private static void _hgb_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._hgb, sf);
                }
                private static bool _hgb_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.hgb_IsReadOnly(ref result);
                    return result;
                }
                private static void _hgb_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.hgb_Validate(r);
                }
                private static string _hgb_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.hgb;
                }
                private static void _hgb_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.hgb = v;
                }
                private static void _hgb_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.hgb_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    proteinuria = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "proteinuria",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._proteinuria_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._proteinuria_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._proteinuria_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._proteinuria_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._proteinuria_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._proteinuria_OnValueChanged);
                private static void _proteinuria_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._proteinuria, sf);
                }
                private static bool _proteinuria_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.proteinuria_IsReadOnly(ref result);
                    return result;
                }
                private static void _proteinuria_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.proteinuria_Validate(r);
                }
                private static string _proteinuria_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.proteinuria;
                }
                private static void _proteinuria_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.proteinuria = v;
                }
                private static void _proteinuria_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.proteinuria_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    glicosuria = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "glicosuria",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._glicosuria_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._glicosuria_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._glicosuria_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._glicosuria_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._glicosuria_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._glicosuria_OnValueChanged);
                private static void _glicosuria_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._glicosuria, sf);
                }
                private static bool _glicosuria_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.glicosuria_IsReadOnly(ref result);
                    return result;
                }
                private static void _glicosuria_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.glicosuria_Validate(r);
                }
                private static string _glicosuria_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.glicosuria;
                }
                private static void _glicosuria_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.glicosuria = v;
                }
                private static void _glicosuria_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.glicosuria_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry
                    its_ulceragenital = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "its_ulceragenital",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_ulceragenital_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_ulceragenital_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_ulceragenital_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_ulceragenital_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_ulceragenital_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_ulceragenital_OnValueChanged);
                private static void _its_ulceragenital_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._its_ulceragenital, sf);
                }
                private static bool _its_ulceragenital_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.its_ulceragenital_IsReadOnly(ref result);
                    return result;
                }
                private static void _its_ulceragenital_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.its_ulceragenital_Validate(r);
                }
                private static global::System.Nullable<bool> _its_ulceragenital_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.its_ulceragenital;
                }
                private static void _its_ulceragenital_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.its_ulceragenital = v;
                }
                private static void _its_ulceragenital_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.its_ulceragenital_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry
                    its_leucorreia = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "its_leucorreia",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_leucorreia_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_leucorreia_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_leucorreia_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_leucorreia_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_leucorreia_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_leucorreia_OnValueChanged);
                private static void _its_leucorreia_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._its_leucorreia, sf);
                }
                private static bool _its_leucorreia_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.its_leucorreia_IsReadOnly(ref result);
                    return result;
                }
                private static void _its_leucorreia_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.its_leucorreia_Validate(r);
                }
                private static global::System.Nullable<bool> _its_leucorreia_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.its_leucorreia;
                }
                private static void _its_leucorreia_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.its_leucorreia = v;
                }
                private static void _its_leucorreia_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.its_leucorreia_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    its_syndromictreatment = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "its_syndromictreatment",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_syndromictreatment_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_syndromictreatment_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_syndromictreatment_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_syndromictreatment_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_syndromictreatment_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_syndromictreatment_OnValueChanged);
                private static void _its_syndromictreatment_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._its_syndromictreatment, sf);
                }
                private static bool _its_syndromictreatment_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.its_syndromictreatment_IsReadOnly(ref result);
                    return result;
                }
                private static void _its_syndromictreatment_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.its_syndromictreatment_Validate(r);
                }
                private static string _its_syndromictreatment_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.its_syndromictreatment;
                }
                private static void _its_syndromictreatment_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.its_syndromictreatment = v;
                }
                private static void _its_syndromictreatment_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.its_syndromictreatment_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    its_syphilistesting = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "its_syphilistesting",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_syphilistesting_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_syphilistesting_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_syphilistesting_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_syphilistesting_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_syphilistesting_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_syphilistesting_OnValueChanged);
                private static void _its_syphilistesting_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._its_syphilistesting, sf);
                }
                private static bool _its_syphilistesting_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.its_syphilistesting_IsReadOnly(ref result);
                    return result;
                }
                private static void _its_syphilistesting_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.its_syphilistesting_Validate(r);
                }
                private static string _its_syphilistesting_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.its_syphilistesting;
                }
                private static void _its_syphilistesting_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.its_syphilistesting = v;
                }
                private static void _its_syphilistesting_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.its_syphilistesting_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    its_wsyphilistreat = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "its_wsyphilistreat",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_wsyphilistreat_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_wsyphilistreat_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_wsyphilistreat_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_wsyphilistreat_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_wsyphilistreat_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_wsyphilistreat_OnValueChanged);
                private static void _its_wsyphilistreat_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._its_wsyphilistreat, sf);
                }
                private static bool _its_wsyphilistreat_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.its_wsyphilistreat_IsReadOnly(ref result);
                    return result;
                }
                private static void _its_wsyphilistreat_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.its_wsyphilistreat_Validate(r);
                }
                private static string _its_wsyphilistreat_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.its_wsyphilistreat;
                }
                private static void _its_wsyphilistreat_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.its_wsyphilistreat = v;
                }
                private static void _its_wsyphilistreat_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.its_wsyphilistreat_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    its_psyphilistreat = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "its_psyphilistreat",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_psyphilistreat_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_psyphilistreat_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_psyphilistreat_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_psyphilistreat_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_psyphilistreat_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_psyphilistreat_OnValueChanged);
                private static void _its_psyphilistreat_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._its_psyphilistreat, sf);
                }
                private static bool _its_psyphilistreat_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.its_psyphilistreat_IsReadOnly(ref result);
                    return result;
                }
                private static void _its_psyphilistreat_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.its_psyphilistreat_Validate(r);
                }
                private static string _its_psyphilistreat_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.its_psyphilistreat;
                }
                private static void _its_psyphilistreat_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.its_psyphilistreat = v;
                }
                private static void _its_psyphilistreat_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.its_psyphilistreat_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    its_syphilistratmentmulhr = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "its_syphilistratmentmulhr",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_syphilistratmentmulhr_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_syphilistratmentmulhr_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_syphilistratmentmulhr_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_syphilistratmentmulhr_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_syphilistratmentmulhr_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_syphilistratmentmulhr_OnValueChanged);
                private static void _its_syphilistratmentmulhr_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._its_syphilistratmentmulhr, sf);
                }
                private static bool _its_syphilistratmentmulhr_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.its_syphilistratmentmulhr_IsReadOnly(ref result);
                    return result;
                }
                private static void _its_syphilistratmentmulhr_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.its_syphilistratmentmulhr_Validate(r);
                }
                private static string _its_syphilistratmentmulhr_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.its_syphilistratmentmulhr;
                }
                private static void _its_syphilistratmentmulhr_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.its_syphilistratmentmulhr = v;
                }
                private static void _its_syphilistratmentmulhr_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.its_syphilistratmentmulhr_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    its_syphilistratmentparceir = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "its_syphilistratmentparceir",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_syphilistratmentparceir_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_syphilistratmentparceir_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_syphilistratmentparceir_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_syphilistratmentparceir_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_syphilistratmentparceir_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._its_syphilistratmentparceir_OnValueChanged);
                private static void _its_syphilistratmentparceir_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._its_syphilistratmentparceir, sf);
                }
                private static bool _its_syphilistratmentparceir_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.its_syphilistratmentparceir_IsReadOnly(ref result);
                    return result;
                }
                private static void _its_syphilistratmentparceir_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.its_syphilistratmentparceir_Validate(r);
                }
                private static string _its_syphilistratmentparceir_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.its_syphilistratmentparceir;
                }
                private static void _its_syphilistratmentparceir_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.its_syphilistratmentparceir = v;
                }
                private static void _its_syphilistratmentparceir_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.its_syphilistratmentparceir_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    serostatusentcpn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "serostatusentcpn",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._serostatusentcpn_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._serostatusentcpn_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._serostatusentcpn_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._serostatusentcpn_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._serostatusentcpn_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._serostatusentcpn_OnValueChanged);
                private static void _serostatusentcpn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._serostatusentcpn, sf);
                }
                private static bool _serostatusentcpn_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.serostatusentcpn_IsReadOnly(ref result);
                    return result;
                }
                private static void _serostatusentcpn_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.serostatusentcpn_Validate(r);
                }
                private static string _serostatusentcpn_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.serostatusentcpn;
                }
                private static void _serostatusentcpn_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.serostatusentcpn = v;
                }
                private static void _serostatusentcpn_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.serostatusentcpn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    cpnhivtest = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "cpnhivtest",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._cpnhivtest_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._cpnhivtest_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._cpnhivtest_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._cpnhivtest_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._cpnhivtest_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._cpnhivtest_OnValueChanged);
                private static void _cpnhivtest_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._cpnhivtest, sf);
                }
                private static bool _cpnhivtest_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.cpnhivtest_IsReadOnly(ref result);
                    return result;
                }
                private static void _cpnhivtest_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.cpnhivtest_Validate(r);
                }
                private static string _cpnhivtest_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.cpnhivtest;
                }
                private static void _cpnhivtest_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.cpnhivtest = v;
                }
                private static void _cpnhivtest_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.cpnhivtest_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    partnerhivtest = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "partnerhivtest",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._partnerhivtest_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._partnerhivtest_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._partnerhivtest_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._partnerhivtest_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._partnerhivtest_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._partnerhivtest_OnValueChanged);
                private static void _partnerhivtest_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._partnerhivtest, sf);
                }
                private static bool _partnerhivtest_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.partnerhivtest_IsReadOnly(ref result);
                    return result;
                }
                private static void _partnerhivtest_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.partnerhivtest_Validate(r);
                }
                private static string _partnerhivtest_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.partnerhivtest;
                }
                private static void _partnerhivtest_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.partnerhivtest = v;
                }
                private static void _partnerhivtest_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.partnerhivtest_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry
                    ctz = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "ctz",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._ctz_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._ctz_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._ctz_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._ctz_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._ctz_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._ctz_OnValueChanged);
                private static void _ctz_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._ctz, sf);
                }
                private static bool _ctz_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.ctz_IsReadOnly(ref result);
                    return result;
                }
                private static void _ctz_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ctz_Validate(r);
                }
                private static global::System.Nullable<bool> _ctz_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.ctz;
                }
                private static void _ctz_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.ctz = v;
                }
                private static void _ctz_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.ctz_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    ctz_init_cont = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "ctz_init_cont",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._ctz_init_cont_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._ctz_init_cont_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._ctz_init_cont_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._ctz_init_cont_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._ctz_init_cont_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._ctz_init_cont_OnValueChanged);
                private static void _ctz_init_cont_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._ctz_init_cont, sf);
                }
                private static bool _ctz_init_cont_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.ctz_init_cont_IsReadOnly(ref result);
                    return result;
                }
                private static void _ctz_init_cont_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ctz_init_cont_Validate(r);
                }
                private static string _ctz_init_cont_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.ctz_init_cont;
                }
                private static void _ctz_init_cont_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ctz_init_cont = v;
                }
                private static void _ctz_init_cont_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.ctz_init_cont_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry
                    tarv = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "tarv",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tarv_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tarv_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tarv_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tarv_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tarv_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tarv_OnValueChanged);
                private static void _tarv_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._tarv, sf);
                }
                private static bool _tarv_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.tarv_IsReadOnly(ref result);
                    return result;
                }
                private static void _tarv_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.tarv_Validate(r);
                }
                private static global::System.Nullable<bool> _tarv_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.tarv;
                }
                private static void _tarv_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.tarv = v;
                }
                private static void _tarv_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.tarv_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry
                    nvp = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "nvp",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._nvp_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._nvp_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._nvp_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._nvp_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._nvp_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._nvp_OnValueChanged);
                private static void _nvp_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._nvp, sf);
                }
                private static bool _nvp_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.nvp_IsReadOnly(ref result);
                    return result;
                }
                private static void _nvp_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.nvp_Validate(r);
                }
                private static global::System.Nullable<bool> _nvp_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.nvp;
                }
                private static void _nvp_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.nvp = v;
                }
                private static void _nvp_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.nvp_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry
                    azt_nvp = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "azt_nvp",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._azt_nvp_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._azt_nvp_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._azt_nvp_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._azt_nvp_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._azt_nvp_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._azt_nvp_OnValueChanged);
                private static void _azt_nvp_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._azt_nvp, sf);
                }
                private static bool _azt_nvp_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.azt_nvp_IsReadOnly(ref result);
                    return result;
                }
                private static void _azt_nvp_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.azt_nvp_Validate(r);
                }
                private static global::System.Nullable<bool> _azt_nvp_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.azt_nvp;
                }
                private static void _azt_nvp_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.azt_nvp = v;
                }
                private static void _azt_nvp_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.azt_nvp_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry
                    em_tarv_entrada = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "em_tarv_entrada",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._em_tarv_entrada_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._em_tarv_entrada_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._em_tarv_entrada_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._em_tarv_entrada_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._em_tarv_entrada_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._em_tarv_entrada_OnValueChanged);
                private static void _em_tarv_entrada_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._em_tarv_entrada, sf);
                }
                private static bool _em_tarv_entrada_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.em_tarv_entrada_IsReadOnly(ref result);
                    return result;
                }
                private static void _em_tarv_entrada_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.em_tarv_entrada_Validate(r);
                }
                private static global::System.Nullable<bool> _em_tarv_entrada_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.em_tarv_entrada;
                }
                private static void _em_tarv_entrada_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.em_tarv_entrada = v;
                }
                private static void _em_tarv_entrada_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.em_tarv_entrada_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry
                    tarv_init_visit = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "tarv_init_visit",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tarv_init_visit_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tarv_init_visit_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tarv_init_visit_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tarv_init_visit_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tarv_init_visit_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tarv_init_visit_OnValueChanged);
                private static void _tarv_init_visit_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._tarv_init_visit, sf);
                }
                private static bool _tarv_init_visit_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.tarv_init_visit_IsReadOnly(ref result);
                    return result;
                }
                private static void _tarv_init_visit_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.tarv_init_visit_Validate(r);
                }
                private static global::System.Nullable<bool> _tarv_init_visit_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.tarv_init_visit;
                }
                private static void _tarv_init_visit_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.tarv_init_visit = v;
                }
                private static void _tarv_init_visit_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.tarv_init_visit_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry
                    arv_cont = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "arv_cont",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._arv_cont_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._arv_cont_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._arv_cont_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._arv_cont_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._arv_cont_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._arv_cont_OnValueChanged);
                private static void _arv_cont_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._arv_cont, sf);
                }
                private static bool _arv_cont_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.arv_cont_IsReadOnly(ref result);
                    return result;
                }
                private static void _arv_cont_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.arv_cont_Validate(r);
                }
                private static global::System.Nullable<bool> _arv_cont_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.arv_cont;
                }
                private static void _arv_cont_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.arv_cont = v;
                }
                private static void _arv_cont_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.arv_cont_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    tip = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "tip",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tip_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tip_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tip_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tip_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tip_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tip_OnValueChanged);
                private static void _tip_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._tip, sf);
                }
                private static bool _tip_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.tip_IsReadOnly(ref result);
                    return result;
                }
                private static void _tip_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.tip_Validate(r);
                }
                private static string _tip_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.tip;
                }
                private static void _tip_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.tip = v;
                }
                private static void _tip_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.tip_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    bednet = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "bednet",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._bednet_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._bednet_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._bednet_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._bednet_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._bednet_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._bednet_OnValueChanged);
                private static void _bednet_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._bednet, sf);
                }
                private static bool _bednet_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.bednet_IsReadOnly(ref result);
                    return result;
                }
                private static void _bednet_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.bednet_Validate(r);
                }
                private static string _bednet_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.bednet;
                }
                private static void _bednet_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.bednet = v;
                }
                private static void _bednet_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.bednet_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    tdr_htz = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "tdr_htz",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tdr_htz_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tdr_htz_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tdr_htz_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tdr_htz_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tdr_htz_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tdr_htz_OnValueChanged);
                private static void _tdr_htz_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._tdr_htz, sf);
                }
                private static bool _tdr_htz_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.tdr_htz_IsReadOnly(ref result);
                    return result;
                }
                private static void _tdr_htz_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.tdr_htz_Validate(r);
                }
                private static string _tdr_htz_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.tdr_htz;
                }
                private static void _tdr_htz_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.tdr_htz = v;
                }
                private static void _tdr_htz_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.tdr_htz_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    result_tdr_htz = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "result_tdr_htz",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._result_tdr_htz_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._result_tdr_htz_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._result_tdr_htz_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._result_tdr_htz_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._result_tdr_htz_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._result_tdr_htz_OnValueChanged);
                private static void _result_tdr_htz_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._result_tdr_htz, sf);
                }
                private static bool _result_tdr_htz_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.result_tdr_htz_IsReadOnly(ref result);
                    return result;
                }
                private static void _result_tdr_htz_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.result_tdr_htz_Validate(r);
                }
                private static string _result_tdr_htz_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.result_tdr_htz;
                }
                private static void _result_tdr_htz_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.result_tdr_htz = v;
                }
                private static void _result_tdr_htz_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.result_tdr_htz_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    pos_malaria_treated = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "pos_malaria_treated",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._pos_malaria_treated_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._pos_malaria_treated_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._pos_malaria_treated_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._pos_malaria_treated_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._pos_malaria_treated_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._pos_malaria_treated_OnValueChanged);
                private static void _pos_malaria_treated_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._pos_malaria_treated, sf);
                }
                private static bool _pos_malaria_treated_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.pos_malaria_treated_IsReadOnly(ref result);
                    return result;
                }
                private static void _pos_malaria_treated_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.pos_malaria_treated_Validate(r);
                }
                private static string _pos_malaria_treated_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.pos_malaria_treated;
                }
                private static void _pos_malaria_treated_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.pos_malaria_treated = v;
                }
                private static void _pos_malaria_treated_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.pos_malaria_treated_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    hpp = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "hpp",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._hpp_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._hpp_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._hpp_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._hpp_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._hpp_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._hpp_OnValueChanged);
                private static void _hpp_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._hpp, sf);
                }
                private static bool _hpp_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.hpp_IsReadOnly(ref result);
                    return result;
                }
                private static void _hpp_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.hpp_Validate(r);
                }
                private static string _hpp_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.hpp;
                }
                private static void _hpp_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.hpp = v;
                }
                private static void _hpp_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.hpp_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry
                    vat_1_dose = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "vat_1_dose",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._vat_1_dose_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._vat_1_dose_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._vat_1_dose_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._vat_1_dose_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._vat_1_dose_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._vat_1_dose_OnValueChanged);
                private static void _vat_1_dose_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._vat_1_dose, sf);
                }
                private static bool _vat_1_dose_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.vat_1_dose_IsReadOnly(ref result);
                    return result;
                }
                private static void _vat_1_dose_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.vat_1_dose_Validate(r);
                }
                private static global::System.Nullable<bool> _vat_1_dose_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.vat_1_dose;
                }
                private static void _vat_1_dose_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.vat_1_dose = v;
                }
                private static void _vat_1_dose_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.vat_1_dose_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry
                    vat_2_5_dose = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "vat_2_5_dose",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._vat_2_5_dose_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._vat_2_5_dose_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._vat_2_5_dose_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._vat_2_5_dose_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._vat_2_5_dose_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._vat_2_5_dose_OnValueChanged);
                private static void _vat_2_5_dose_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._vat_2_5_dose, sf);
                }
                private static bool _vat_2_5_dose_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.vat_2_5_dose_IsReadOnly(ref result);
                    return result;
                }
                private static void _vat_2_5_dose_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.vat_2_5_dose_Validate(r);
                }
                private static global::System.Nullable<bool> _vat_2_5_dose_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.vat_2_5_dose;
                }
                private static void _vat_2_5_dose_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.vat_2_5_dose = v;
                }
                private static void _vat_2_5_dose_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.vat_2_5_dose_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    tb_isoniazid = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "tb_isoniazid",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tb_isoniazid_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tb_isoniazid_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tb_isoniazid_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tb_isoniazid_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tb_isoniazid_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tb_isoniazid_OnValueChanged);
                private static void _tb_isoniazid_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._tb_isoniazid, sf);
                }
                private static bool _tb_isoniazid_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.tb_isoniazid_IsReadOnly(ref result);
                    return result;
                }
                private static void _tb_isoniazid_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.tb_isoniazid_Validate(r);
                }
                private static string _tb_isoniazid_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.tb_isoniazid;
                }
                private static void _tb_isoniazid_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.tb_isoniazid = v;
                }
                private static void _tb_isoniazid_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.tb_isoniazid_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    tb_treatment = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "tb_treatment",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tb_treatment_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tb_treatment_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tb_treatment_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tb_treatment_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tb_treatment_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._tb_treatment_OnValueChanged);
                private static void _tb_treatment_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._tb_treatment, sf);
                }
                private static bool _tb_treatment_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.tb_treatment_IsReadOnly(ref result);
                    return result;
                }
                private static void _tb_treatment_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.tb_treatment_Validate(r);
                }
                private static string _tb_treatment_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.tb_treatment;
                }
                private static void _tb_treatment_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.tb_treatment = v;
                }
                private static void _tb_treatment_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.tb_treatment_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    obs = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "obs",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._obs_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._obs_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._obs_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._obs_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._obs_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._obs_OnValueChanged);
                private static void _obs_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._obs, sf);
                }
                private static bool _obs_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.obs_IsReadOnly(ref result);
                    return result;
                }
                private static void _obs_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.obs_Validate(r);
                }
                private static string _obs_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.obs;
                }
                private static void _obs_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.obs = v;
                }
                private static void _obs_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.obs_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry
                    providername = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Entry(
                        "providername",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._providername_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._providername_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._providername_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._providername_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._providername_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._providername_OnValueChanged);
                private static void _providername_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._providername, sf);
                }
                private static bool _providername_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.providername_IsReadOnly(ref result);
                    return result;
                }
                private static void _providername_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.providername_Validate(r);
                }
                private static string _providername_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.providername;
                }
                private static void _providername_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.providername = v;
                }
                private static void _providername_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.providername_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::LightSwitchApplication.mother>.Entry
                    mother = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::LightSwitchApplication.mother>.Entry(
                        "mother",
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._mother_Stub,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._mother_ComputeIsReadOnly,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._mother_Validate,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._mother_GetCoreImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._mother_GetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._mother_SetImplementationValue,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._mother_Refresh,
                        global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties._mother_OnValueChanged);
                private static void _mother_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.cpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::LightSwitchApplication.mother>.Data> c, global::LightSwitchApplication.cpn.DetailsClass d, object sf)
                {
                    c(d, ref d._mother, sf);
                }
                private static bool _mother_ComputeIsReadOnly(global::LightSwitchApplication.cpn e)
                {
                    bool result = false;
                    e.mother_IsReadOnly(ref result);
                    return result;
                }
                private static void _mother_Validate(global::LightSwitchApplication.cpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.mother_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _mother_GetCoreImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.ImplementationEntity.mother;
                }
                private static global::LightSwitchApplication.mother _mother_GetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.mother, global::LightSwitchApplication.mother.DetailsClass>(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.mother, ref d._mother);
                }
                private static void _mother_SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass d, global::LightSwitchApplication.mother v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.mother, ref d._mother, (i, ev) => i.mother = ev, v);
                }
                private static void _mother_Refresh(global::LightSwitchApplication.cpn.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.cpn.DetailsClass.PropertySetProperties.mother, ref d._mother);
                }
                private static void _mother_OnValueChanged(global::LightSwitchApplication.cpn e)
                {
                    e.mother_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, long>.Data _id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<int>>.Data _nr_consulta;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _nlivro;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, int>.Data _nyear;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.DateTime>.Data _visdate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _agegroup;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<int>>.Data _gestationalage;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data _gageless12;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data _partnerpresence;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<int>>.Data _weight;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _weightgainyno;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data _dag;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data _dam;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<int>>.Data _supnutr;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _resultcured;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _resultabandon;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _receiveddesparasitante;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _salferr_acfolico;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _ta;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _hgb;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _proteinuria;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _glicosuria;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data _its_ulceragenital;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data _its_leucorreia;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _its_syndromictreatment;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _its_syphilistesting;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _its_wsyphilistreat;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _its_psyphilistreat;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _its_syphilistratmentmulhr;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _its_syphilistratmentparceir;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _serostatusentcpn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _cpnhivtest;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _partnerhivtest;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data _ctz;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _ctz_init_cont;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data _tarv;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data _nvp;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data _azt_nvp;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data _em_tarv_entrada;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data _tarv_init_visit;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data _arv_cont;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _tip;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _bednet;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _tdr_htz;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _result_tdr_htz;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _pos_malaria_treated;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _hpp;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data _vat_1_dose;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::System.Nullable<bool>>.Data _vat_2_5_dose;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _tb_isoniazid;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _tb_treatment;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _obs;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, string>.Data _providername;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.cpn, global::LightSwitchApplication.cpn.DetailsClass, global::LightSwitchApplication.mother>.Data _mother;
            
        }
    
        #endregion
    }
    
    #endregion
}
