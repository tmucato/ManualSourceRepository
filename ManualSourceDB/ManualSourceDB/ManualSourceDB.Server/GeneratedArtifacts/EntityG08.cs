

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    public sealed partial class patient : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the patient entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public patient()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public patient(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.patient> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.patient.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void patient_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void patient_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int id
        {
            get
            {
                return global::LightSwitchApplication.patient.DetailsClass.GetValue(this, global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.id);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string person_type
        {
            get
            {
                return global::LightSwitchApplication.patient.DetailsClass.GetValue(this, global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.person_type);
            }
            set
            {
                global::LightSwitchApplication.patient.DetailsClass.SetValue(this, global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.person_type, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void person_type_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void person_type_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void person_type_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string nid_cpn
        {
            get
            {
                return global::LightSwitchApplication.patient.DetailsClass.GetValue(this, global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.nid_cpn);
            }
            set
            {
                global::LightSwitchApplication.patient.DetailsClass.SetValue(this, global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.nid_cpn, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nid_cpn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nid_cpn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nid_cpn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string nid_ccr
        {
            get
            {
                return global::LightSwitchApplication.patient.DetailsClass.GetValue(this, global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.nid_ccr);
            }
            set
            {
                global::LightSwitchApplication.patient.DetailsClass.SetValue(this, global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.nid_ccr, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nid_ccr_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nid_ccr_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nid_ccr_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string nit
        {
            get
            {
                return global::LightSwitchApplication.patient.DetailsClass.GetValue(this, global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.nit);
            }
            set
            {
                global::LightSwitchApplication.patient.DetailsClass.SetValue(this, global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.nit, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nit_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nit_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nit_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string nficha_gbv
        {
            get
            {
                return global::LightSwitchApplication.patient.DetailsClass.GetValue(this, global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.nficha_gbv);
            }
            set
            {
                global::LightSwitchApplication.patient.DetailsClass.SetValue(this, global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.nficha_gbv, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nficha_gbv_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nficha_gbv_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nficha_gbv_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string nid_tarv
        {
            get
            {
                return global::LightSwitchApplication.patient.DetailsClass.GetValue(this, global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.nid_tarv);
            }
            set
            {
                global::LightSwitchApplication.patient.DetailsClass.SetValue(this, global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.nid_tarv, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nid_tarv_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nid_tarv_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nid_tarv_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string name
        {
            get
            {
                return global::LightSwitchApplication.patient.DetailsClass.GetValue(this, global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.name);
            }
            set
            {
                global::LightSwitchApplication.patient.DetailsClass.SetValue(this, global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string residence
        {
            get
            {
                return global::LightSwitchApplication.patient.DetailsClass.GetValue(this, global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.residence);
            }
            set
            {
                global::LightSwitchApplication.patient.DetailsClass.SetValue(this, global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.residence, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void residence_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void residence_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void residence_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string phone
        {
            get
            {
                return global::LightSwitchApplication.patient.DetailsClass.GetValue(this, global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.phone);
            }
            set
            {
                global::LightSwitchApplication.patient.DetailsClass.SetValue(this, global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.phone, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void phone_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void phone_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void phone_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> dob
        {
            get
            {
                return global::LightSwitchApplication.patient.DetailsClass.GetValue(this, global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.dob);
            }
            set
            {
                global::LightSwitchApplication.patient.DetailsClass.SetValue(this, global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.dob, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void dob_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void dob_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void dob_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.patient,
                global::LightSwitchApplication.patient.DetailsClass,
                global::LightSwitchApplication.patient.DetailsClass.IImplementation,
                global::LightSwitchApplication.patient.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass>.Entry
                __patientEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass>.Entry(
                    global::LightSwitchApplication.patient.DetailsClass.__patient_CreateNew,
                    global::LightSwitchApplication.patient.DetailsClass.__patient_Created,
                    global::LightSwitchApplication.patient.DetailsClass.__patient_AllowSaveWithErrors);
            private static global::LightSwitchApplication.patient __patient_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.patient> es)
            {
                return new global::LightSwitchApplication.patient(es);
            }
            private static void __patient_Created(global::LightSwitchApplication.patient e)
            {
                e.patient_Created();
            }
            private static bool __patient_AllowSaveWithErrors(global::LightSwitchApplication.patient e)
            {
                bool result = false;
                e.patient_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.patient.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, int> id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string> person_type
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.person_type) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string> nid_cpn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.nid_cpn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string> nid_ccr
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.nid_ccr) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string> nit
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.nit) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string> nficha_gbv
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.nficha_gbv) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string> nid_tarv
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.nid_tarv) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string> name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string> residence
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.residence) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string> phone
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.phone) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, global::System.Nullable<global::System.DateTime>> dob
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties.dob) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int id { get; }
                new string person_type { get; set; }
                new string nid_cpn { get; set; }
                new string nid_ccr { get; set; }
                new string nit { get; set; }
                new string nficha_gbv { get; set; }
                new string nid_tarv { get; set; }
                new string name { get; set; }
                new string residence { get; set; }
                new string phone { get; set; }
                new global::System.Nullable<global::System.DateTime> dob { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, int>.Entry
                    id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, int>.Entry(
                        "id",
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._id_Stub,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._id_ComputeIsReadOnly,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._id_Validate,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._id_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._id_OnValueChanged);
                private static void _id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.patient.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, int>.Data> c, global::LightSwitchApplication.patient.DetailsClass d, object sf)
                {
                    c(d, ref d._id, sf);
                }
                private static bool _id_ComputeIsReadOnly(global::LightSwitchApplication.patient e)
                {
                    bool result = false;
                    e.id_IsReadOnly(ref result);
                    return result;
                }
                private static void _id_Validate(global::LightSwitchApplication.patient e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.id_Validate(r);
                }
                private static int _id_GetImplementationValue(global::LightSwitchApplication.patient.DetailsClass d)
                {
                    return d.ImplementationEntity.id;
                }
                private static void _id_OnValueChanged(global::LightSwitchApplication.patient e)
                {
                    e.id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Entry
                    person_type = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Entry(
                        "person_type",
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._person_type_Stub,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._person_type_ComputeIsReadOnly,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._person_type_Validate,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._person_type_GetImplementationValue,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._person_type_SetImplementationValue,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._person_type_OnValueChanged);
                private static void _person_type_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.patient.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Data> c, global::LightSwitchApplication.patient.DetailsClass d, object sf)
                {
                    c(d, ref d._person_type, sf);
                }
                private static bool _person_type_ComputeIsReadOnly(global::LightSwitchApplication.patient e)
                {
                    bool result = false;
                    e.person_type_IsReadOnly(ref result);
                    return result;
                }
                private static void _person_type_Validate(global::LightSwitchApplication.patient e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.person_type_Validate(r);
                }
                private static string _person_type_GetImplementationValue(global::LightSwitchApplication.patient.DetailsClass d)
                {
                    return d.ImplementationEntity.person_type;
                }
                private static void _person_type_SetImplementationValue(global::LightSwitchApplication.patient.DetailsClass d, string v)
                {
                    d.ImplementationEntity.person_type = v;
                }
                private static void _person_type_OnValueChanged(global::LightSwitchApplication.patient e)
                {
                    e.person_type_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Entry
                    nid_cpn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Entry(
                        "nid_cpn",
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nid_cpn_Stub,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nid_cpn_ComputeIsReadOnly,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nid_cpn_Validate,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nid_cpn_GetImplementationValue,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nid_cpn_SetImplementationValue,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nid_cpn_OnValueChanged);
                private static void _nid_cpn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.patient.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Data> c, global::LightSwitchApplication.patient.DetailsClass d, object sf)
                {
                    c(d, ref d._nid_cpn, sf);
                }
                private static bool _nid_cpn_ComputeIsReadOnly(global::LightSwitchApplication.patient e)
                {
                    bool result = false;
                    e.nid_cpn_IsReadOnly(ref result);
                    return result;
                }
                private static void _nid_cpn_Validate(global::LightSwitchApplication.patient e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.nid_cpn_Validate(r);
                }
                private static string _nid_cpn_GetImplementationValue(global::LightSwitchApplication.patient.DetailsClass d)
                {
                    return d.ImplementationEntity.nid_cpn;
                }
                private static void _nid_cpn_SetImplementationValue(global::LightSwitchApplication.patient.DetailsClass d, string v)
                {
                    d.ImplementationEntity.nid_cpn = v;
                }
                private static void _nid_cpn_OnValueChanged(global::LightSwitchApplication.patient e)
                {
                    e.nid_cpn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Entry
                    nid_ccr = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Entry(
                        "nid_ccr",
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nid_ccr_Stub,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nid_ccr_ComputeIsReadOnly,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nid_ccr_Validate,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nid_ccr_GetImplementationValue,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nid_ccr_SetImplementationValue,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nid_ccr_OnValueChanged);
                private static void _nid_ccr_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.patient.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Data> c, global::LightSwitchApplication.patient.DetailsClass d, object sf)
                {
                    c(d, ref d._nid_ccr, sf);
                }
                private static bool _nid_ccr_ComputeIsReadOnly(global::LightSwitchApplication.patient e)
                {
                    bool result = false;
                    e.nid_ccr_IsReadOnly(ref result);
                    return result;
                }
                private static void _nid_ccr_Validate(global::LightSwitchApplication.patient e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.nid_ccr_Validate(r);
                }
                private static string _nid_ccr_GetImplementationValue(global::LightSwitchApplication.patient.DetailsClass d)
                {
                    return d.ImplementationEntity.nid_ccr;
                }
                private static void _nid_ccr_SetImplementationValue(global::LightSwitchApplication.patient.DetailsClass d, string v)
                {
                    d.ImplementationEntity.nid_ccr = v;
                }
                private static void _nid_ccr_OnValueChanged(global::LightSwitchApplication.patient e)
                {
                    e.nid_ccr_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Entry
                    nit = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Entry(
                        "nit",
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nit_Stub,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nit_ComputeIsReadOnly,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nit_Validate,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nit_GetImplementationValue,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nit_SetImplementationValue,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nit_OnValueChanged);
                private static void _nit_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.patient.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Data> c, global::LightSwitchApplication.patient.DetailsClass d, object sf)
                {
                    c(d, ref d._nit, sf);
                }
                private static bool _nit_ComputeIsReadOnly(global::LightSwitchApplication.patient e)
                {
                    bool result = false;
                    e.nit_IsReadOnly(ref result);
                    return result;
                }
                private static void _nit_Validate(global::LightSwitchApplication.patient e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.nit_Validate(r);
                }
                private static string _nit_GetImplementationValue(global::LightSwitchApplication.patient.DetailsClass d)
                {
                    return d.ImplementationEntity.nit;
                }
                private static void _nit_SetImplementationValue(global::LightSwitchApplication.patient.DetailsClass d, string v)
                {
                    d.ImplementationEntity.nit = v;
                }
                private static void _nit_OnValueChanged(global::LightSwitchApplication.patient e)
                {
                    e.nit_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Entry
                    nficha_gbv = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Entry(
                        "nficha_gbv",
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nficha_gbv_Stub,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nficha_gbv_ComputeIsReadOnly,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nficha_gbv_Validate,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nficha_gbv_GetImplementationValue,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nficha_gbv_SetImplementationValue,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nficha_gbv_OnValueChanged);
                private static void _nficha_gbv_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.patient.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Data> c, global::LightSwitchApplication.patient.DetailsClass d, object sf)
                {
                    c(d, ref d._nficha_gbv, sf);
                }
                private static bool _nficha_gbv_ComputeIsReadOnly(global::LightSwitchApplication.patient e)
                {
                    bool result = false;
                    e.nficha_gbv_IsReadOnly(ref result);
                    return result;
                }
                private static void _nficha_gbv_Validate(global::LightSwitchApplication.patient e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.nficha_gbv_Validate(r);
                }
                private static string _nficha_gbv_GetImplementationValue(global::LightSwitchApplication.patient.DetailsClass d)
                {
                    return d.ImplementationEntity.nficha_gbv;
                }
                private static void _nficha_gbv_SetImplementationValue(global::LightSwitchApplication.patient.DetailsClass d, string v)
                {
                    d.ImplementationEntity.nficha_gbv = v;
                }
                private static void _nficha_gbv_OnValueChanged(global::LightSwitchApplication.patient e)
                {
                    e.nficha_gbv_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Entry
                    nid_tarv = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Entry(
                        "nid_tarv",
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nid_tarv_Stub,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nid_tarv_ComputeIsReadOnly,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nid_tarv_Validate,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nid_tarv_GetImplementationValue,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nid_tarv_SetImplementationValue,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._nid_tarv_OnValueChanged);
                private static void _nid_tarv_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.patient.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Data> c, global::LightSwitchApplication.patient.DetailsClass d, object sf)
                {
                    c(d, ref d._nid_tarv, sf);
                }
                private static bool _nid_tarv_ComputeIsReadOnly(global::LightSwitchApplication.patient e)
                {
                    bool result = false;
                    e.nid_tarv_IsReadOnly(ref result);
                    return result;
                }
                private static void _nid_tarv_Validate(global::LightSwitchApplication.patient e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.nid_tarv_Validate(r);
                }
                private static string _nid_tarv_GetImplementationValue(global::LightSwitchApplication.patient.DetailsClass d)
                {
                    return d.ImplementationEntity.nid_tarv;
                }
                private static void _nid_tarv_SetImplementationValue(global::LightSwitchApplication.patient.DetailsClass d, string v)
                {
                    d.ImplementationEntity.nid_tarv = v;
                }
                private static void _nid_tarv_OnValueChanged(global::LightSwitchApplication.patient e)
                {
                    e.nid_tarv_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Entry
                    name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Entry(
                        "name",
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._name_Stub,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._name_ComputeIsReadOnly,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._name_Validate,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._name_GetImplementationValue,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._name_SetImplementationValue,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._name_OnValueChanged);
                private static void _name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.patient.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Data> c, global::LightSwitchApplication.patient.DetailsClass d, object sf)
                {
                    c(d, ref d._name, sf);
                }
                private static bool _name_ComputeIsReadOnly(global::LightSwitchApplication.patient e)
                {
                    bool result = false;
                    e.name_IsReadOnly(ref result);
                    return result;
                }
                private static void _name_Validate(global::LightSwitchApplication.patient e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.name_Validate(r);
                }
                private static string _name_GetImplementationValue(global::LightSwitchApplication.patient.DetailsClass d)
                {
                    return d.ImplementationEntity.name;
                }
                private static void _name_SetImplementationValue(global::LightSwitchApplication.patient.DetailsClass d, string v)
                {
                    d.ImplementationEntity.name = v;
                }
                private static void _name_OnValueChanged(global::LightSwitchApplication.patient e)
                {
                    e.name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Entry
                    residence = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Entry(
                        "residence",
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._residence_Stub,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._residence_ComputeIsReadOnly,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._residence_Validate,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._residence_GetImplementationValue,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._residence_SetImplementationValue,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._residence_OnValueChanged);
                private static void _residence_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.patient.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Data> c, global::LightSwitchApplication.patient.DetailsClass d, object sf)
                {
                    c(d, ref d._residence, sf);
                }
                private static bool _residence_ComputeIsReadOnly(global::LightSwitchApplication.patient e)
                {
                    bool result = false;
                    e.residence_IsReadOnly(ref result);
                    return result;
                }
                private static void _residence_Validate(global::LightSwitchApplication.patient e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.residence_Validate(r);
                }
                private static string _residence_GetImplementationValue(global::LightSwitchApplication.patient.DetailsClass d)
                {
                    return d.ImplementationEntity.residence;
                }
                private static void _residence_SetImplementationValue(global::LightSwitchApplication.patient.DetailsClass d, string v)
                {
                    d.ImplementationEntity.residence = v;
                }
                private static void _residence_OnValueChanged(global::LightSwitchApplication.patient e)
                {
                    e.residence_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Entry
                    phone = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Entry(
                        "phone",
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._phone_Stub,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._phone_ComputeIsReadOnly,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._phone_Validate,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._phone_GetImplementationValue,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._phone_SetImplementationValue,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._phone_OnValueChanged);
                private static void _phone_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.patient.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Data> c, global::LightSwitchApplication.patient.DetailsClass d, object sf)
                {
                    c(d, ref d._phone, sf);
                }
                private static bool _phone_ComputeIsReadOnly(global::LightSwitchApplication.patient e)
                {
                    bool result = false;
                    e.phone_IsReadOnly(ref result);
                    return result;
                }
                private static void _phone_Validate(global::LightSwitchApplication.patient e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.phone_Validate(r);
                }
                private static string _phone_GetImplementationValue(global::LightSwitchApplication.patient.DetailsClass d)
                {
                    return d.ImplementationEntity.phone;
                }
                private static void _phone_SetImplementationValue(global::LightSwitchApplication.patient.DetailsClass d, string v)
                {
                    d.ImplementationEntity.phone = v;
                }
                private static void _phone_OnValueChanged(global::LightSwitchApplication.patient e)
                {
                    e.phone_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    dob = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "dob",
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._dob_Stub,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._dob_ComputeIsReadOnly,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._dob_Validate,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._dob_GetImplementationValue,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._dob_SetImplementationValue,
                        global::LightSwitchApplication.patient.DetailsClass.PropertySetProperties._dob_OnValueChanged);
                private static void _dob_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.patient.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.patient.DetailsClass d, object sf)
                {
                    c(d, ref d._dob, sf);
                }
                private static bool _dob_ComputeIsReadOnly(global::LightSwitchApplication.patient e)
                {
                    bool result = false;
                    e.dob_IsReadOnly(ref result);
                    return result;
                }
                private static void _dob_Validate(global::LightSwitchApplication.patient e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.dob_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _dob_GetImplementationValue(global::LightSwitchApplication.patient.DetailsClass d)
                {
                    return d.ImplementationEntity.dob;
                }
                private static void _dob_SetImplementationValue(global::LightSwitchApplication.patient.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.dob = global::LightSwitchApplication.patient.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _dob_OnValueChanged(global::LightSwitchApplication.patient e)
                {
                    e.dob_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, int>.Data _id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Data _person_type;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Data _nid_cpn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Data _nid_ccr;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Data _nit;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Data _nficha_gbv;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Data _nid_tarv;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Data _name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Data _residence;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, string>.Data _phone;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.patient, global::LightSwitchApplication.patient.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _dob;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    public sealed partial class t_categoria : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.t_categoria, global::LightSwitchApplication.t_categoria.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the t_categoria entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public t_categoria()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public t_categoria(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.t_categoria> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.t_categoria.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void t_categoria_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void t_categoria_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int codcategoria
        {
            get
            {
                return global::LightSwitchApplication.t_categoria.DetailsClass.GetValue(this, global::LightSwitchApplication.t_categoria.DetailsClass.PropertySetProperties.codcategoria);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void codcategoria_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void codcategoria_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void codcategoria_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string categoria
        {
            get
            {
                return global::LightSwitchApplication.t_categoria.DetailsClass.GetValue(this, global::LightSwitchApplication.t_categoria.DetailsClass.PropertySetProperties.categoria);
            }
            set
            {
                global::LightSwitchApplication.t_categoria.DetailsClass.SetValue(this, global::LightSwitchApplication.t_categoria.DetailsClass.PropertySetProperties.categoria, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void categoria_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void categoria_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void categoria_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.t_categoria,
                global::LightSwitchApplication.t_categoria.DetailsClass,
                global::LightSwitchApplication.t_categoria.DetailsClass.IImplementation,
                global::LightSwitchApplication.t_categoria.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.t_categoria, global::LightSwitchApplication.t_categoria.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.t_categoria, global::LightSwitchApplication.t_categoria.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.t_categoria.DetailsClass.PropertySetProperties.codcategoria;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.t_categoria, global::LightSwitchApplication.t_categoria.DetailsClass>.Entry
                __t_categoriaEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.t_categoria, global::LightSwitchApplication.t_categoria.DetailsClass>.Entry(
                    global::LightSwitchApplication.t_categoria.DetailsClass.__t_categoria_CreateNew,
                    global::LightSwitchApplication.t_categoria.DetailsClass.__t_categoria_Created,
                    global::LightSwitchApplication.t_categoria.DetailsClass.__t_categoria_AllowSaveWithErrors);
            private static global::LightSwitchApplication.t_categoria __t_categoria_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.t_categoria> es)
            {
                return new global::LightSwitchApplication.t_categoria(es);
            }
            private static void __t_categoria_Created(global::LightSwitchApplication.t_categoria e)
            {
                e.t_categoria_Created();
            }
            private static bool __t_categoria_AllowSaveWithErrors(global::LightSwitchApplication.t_categoria e)
            {
                bool result = false;
                e.t_categoria_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.t_categoria, global::LightSwitchApplication.t_categoria.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.t_categoria, global::LightSwitchApplication.t_categoria.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.t_categoria.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.t_categoria, global::LightSwitchApplication.t_categoria.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.t_categoria, global::LightSwitchApplication.t_categoria.DetailsClass, int> codcategoria
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.t_categoria.DetailsClass.PropertySetProperties.codcategoria) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.t_categoria, global::LightSwitchApplication.t_categoria.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.t_categoria, global::LightSwitchApplication.t_categoria.DetailsClass, string> categoria
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.t_categoria.DetailsClass.PropertySetProperties.categoria) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.t_categoria, global::LightSwitchApplication.t_categoria.DetailsClass, string>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int codcategoria { get; }
                new string categoria { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.t_categoria, global::LightSwitchApplication.t_categoria.DetailsClass, int>.Entry
                    codcategoria = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.t_categoria, global::LightSwitchApplication.t_categoria.DetailsClass, int>.Entry(
                        "codcategoria",
                        global::LightSwitchApplication.t_categoria.DetailsClass.PropertySetProperties._codcategoria_Stub,
                        global::LightSwitchApplication.t_categoria.DetailsClass.PropertySetProperties._codcategoria_ComputeIsReadOnly,
                        global::LightSwitchApplication.t_categoria.DetailsClass.PropertySetProperties._codcategoria_Validate,
                        global::LightSwitchApplication.t_categoria.DetailsClass.PropertySetProperties._codcategoria_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.t_categoria.DetailsClass.PropertySetProperties._codcategoria_OnValueChanged);
                private static void _codcategoria_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.t_categoria.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.t_categoria, global::LightSwitchApplication.t_categoria.DetailsClass, int>.Data> c, global::LightSwitchApplication.t_categoria.DetailsClass d, object sf)
                {
                    c(d, ref d._codcategoria, sf);
                }
                private static bool _codcategoria_ComputeIsReadOnly(global::LightSwitchApplication.t_categoria e)
                {
                    bool result = false;
                    e.codcategoria_IsReadOnly(ref result);
                    return result;
                }
                private static void _codcategoria_Validate(global::LightSwitchApplication.t_categoria e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.codcategoria_Validate(r);
                }
                private static int _codcategoria_GetImplementationValue(global::LightSwitchApplication.t_categoria.DetailsClass d)
                {
                    return d.ImplementationEntity.codcategoria;
                }
                private static void _codcategoria_OnValueChanged(global::LightSwitchApplication.t_categoria e)
                {
                    e.codcategoria_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.t_categoria, global::LightSwitchApplication.t_categoria.DetailsClass, string>.Entry
                    categoria = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.t_categoria, global::LightSwitchApplication.t_categoria.DetailsClass, string>.Entry(
                        "categoria",
                        global::LightSwitchApplication.t_categoria.DetailsClass.PropertySetProperties._categoria_Stub,
                        global::LightSwitchApplication.t_categoria.DetailsClass.PropertySetProperties._categoria_ComputeIsReadOnly,
                        global::LightSwitchApplication.t_categoria.DetailsClass.PropertySetProperties._categoria_Validate,
                        global::LightSwitchApplication.t_categoria.DetailsClass.PropertySetProperties._categoria_GetImplementationValue,
                        global::LightSwitchApplication.t_categoria.DetailsClass.PropertySetProperties._categoria_SetImplementationValue,
                        global::LightSwitchApplication.t_categoria.DetailsClass.PropertySetProperties._categoria_OnValueChanged);
                private static void _categoria_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.t_categoria.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.t_categoria, global::LightSwitchApplication.t_categoria.DetailsClass, string>.Data> c, global::LightSwitchApplication.t_categoria.DetailsClass d, object sf)
                {
                    c(d, ref d._categoria, sf);
                }
                private static bool _categoria_ComputeIsReadOnly(global::LightSwitchApplication.t_categoria e)
                {
                    bool result = false;
                    e.categoria_IsReadOnly(ref result);
                    return result;
                }
                private static void _categoria_Validate(global::LightSwitchApplication.t_categoria e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.categoria_Validate(r);
                }
                private static string _categoria_GetImplementationValue(global::LightSwitchApplication.t_categoria.DetailsClass d)
                {
                    return d.ImplementationEntity.categoria;
                }
                private static void _categoria_SetImplementationValue(global::LightSwitchApplication.t_categoria.DetailsClass d, string v)
                {
                    d.ImplementationEntity.categoria = v;
                }
                private static void _categoria_OnValueChanged(global::LightSwitchApplication.t_categoria e)
                {
                    e.categoria_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.t_categoria, global::LightSwitchApplication.t_categoria.DetailsClass, int>.Data _codcategoria;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.t_categoria, global::LightSwitchApplication.t_categoria.DetailsClass, string>.Data _categoria;
            
        }
    
        #endregion
    }
    
    #endregion
}
